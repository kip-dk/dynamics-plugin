// Plugin Version: 1.0.10.21, Dynamics 365 svcutil solid extension tool by Kipon ApS (c) 2019,2020,2021,2022,2023. By Kjeld I. Poulsen
// This file is autogenerated. Do not touch the code manually.

using System;
using System.Linq;
using Microsoft.Xrm.Sdk;
namespace Kipon.Xrm
{
	public sealed class Version
	{
		public const string No = "1.0.10.21";
	}
}
namespace Kipon.Solid.Plugin.Entities
{
	public partial class SolidContextService : Kipon.Xrm.ServiceAPI.IEntityCache { }
	[Kipon.Xrm.Attributes.Export(typeof(IUnitOfWork))]
	[Kipon.Xrm.Attributes.Export(typeof(Kipon.Xrm.IUnitOfWork))]
	public sealed partial class CrmUnitOfWork: IUnitOfWork, IDisposable, Kipon.Xrm.IService
	{
		private SolidContextService context;
		private IOrganizationService _service;
		public CrmUnitOfWork(IOrganizationService orgService)
		{
			this._service = orgService;
			this.context = new SolidContextService(_service);
		}

        public void Dispose()
        {
            context.Dispose();
        }

        public R ExecuteRequest<R>(OrganizationRequest request) where R : OrganizationResponse
        {
            return (R)this.context.Execute(request);
        }

        public OrganizationResponse Execute(OrganizationRequest request)
        {
            return this.context.Execute(request);
        }


        public Guid Create(Entity entity)
        {
            return this._service.Create(entity);
        }

        public void Update(Entity entity)
        {
            this._service.Update(entity);
        }

        public void Delete(Entity entity)
        {
            this._service.Delete(entity.LogicalName, entity.Id);
        }

        public void ClearContext()
        {
            var candidates = this.context.GetAttachedEntities().ToArray();
            foreach (var can in candidates) 
            {
                context.Detach(can);
            }
        }

        public void Detach(string logicalName, params Guid[] ids)
        {
            if (this.context != null)
            {
                var candidates = (from c in this.context.GetAttachedEntities() where c.LogicalName == logicalName select c);
                if (ids != null && ids.Length > 0)
                {
                    candidates = (from c in candidates where ids.Contains(c.Id) select c);
                }
                foreach (var r in candidates.ToArray())
                {
                    context.Detach(r);
                }
            }
        }

        public void Detach(Microsoft.Xrm.Sdk.EntityReference eref)
        {
            this.Detach(eref.LogicalName, eref.Id);
        }

        public void Detach(Microsoft.Xrm.Sdk.Entity ent)
        {
            this.Detach(ent.LogicalName, ent.Id);
        }

        public Kipon.Xrm.ServiceAPI.IEntityCache Cache => this.context;

		void Kipon.Xrm.IService.OnStepFinalized()
		{
			foreach (var e in this.context.GetAttachedEntities().ToArray()) this.context.Detach(e);
		}

		private Kipon.Xrm.IRepository<Account> _accounts; 
		public Kipon.Xrm.IRepository<Account> Accounts
		{
			get
			{
				if (_accounts == null)
					{
						_accounts = new CrmRepository<Account>(this.context, this._service, "account");
					}
				return _accounts;
			}
		}
		private Kipon.Xrm.IRepository<Appointment> _appointments; 
		public Kipon.Xrm.IRepository<Appointment> Appointments
		{
			get
			{
				if (_appointments == null)
					{
						_appointments = new CrmRepository<Appointment>(this.context, this._service, "appointment");
					}
				return _appointments;
			}
		}
		private Kipon.Xrm.IRepository<Email> _emails; 
		public Kipon.Xrm.IRepository<Email> Emails
		{
			get
			{
				if (_emails == null)
					{
						_emails = new CrmRepository<Email>(this.context, this._service, "email");
					}
				return _emails;
			}
		}
		private Kipon.Xrm.IRepository<PhoneCall> _phonecalls; 
		public Kipon.Xrm.IRepository<PhoneCall> Phonecalls
		{
			get
			{
				if (_phonecalls == null)
					{
						_phonecalls = new CrmRepository<PhoneCall>(this.context, this._service, "phonecall");
					}
				return _phonecalls;
			}
		}
		private Kipon.Xrm.IRepository<Contact> _contacts; 
		public Kipon.Xrm.IRepository<Contact> Contacts
		{
			get
			{
				if (_contacts == null)
					{
						_contacts = new CrmRepository<Contact>(this.context, this._service, "contact");
					}
				return _contacts;
			}
		}
		private Kipon.Xrm.IRepository<Invoice> _invoices; 
		public Kipon.Xrm.IRepository<Invoice> Invoices
		{
			get
			{
				if (_invoices == null)
					{
						_invoices = new CrmRepository<Invoice>(this.context, this._service, "invoice");
					}
				return _invoices;
			}
		}
		private Kipon.Xrm.IRepository<kipon_multitest> _multitests; 
		public Kipon.Xrm.IRepository<kipon_multitest> Multitests
		{
			get
			{
				if (_multitests == null)
					{
						_multitests = new CrmRepository<kipon_multitest>(this.context, this._service, "kipon_multitest");
					}
				return _multitests;
			}
		}
		private Kipon.Xrm.IRepository<kipon_vetest> _vetests; 
		public Kipon.Xrm.IRepository<kipon_vetest> Vetests
		{
			get
			{
				if (_vetests == null)
					{
						_vetests = new CrmRepository<kipon_vetest>(this.context, this._service, "kipon_vetest");
					}
				return _vetests;
			}
		}
		private Kipon.Xrm.IRepository<Lead> _leads; 
		public Kipon.Xrm.IRepository<Lead> Leads
		{
			get
			{
				if (_leads == null)
					{
						_leads = new CrmRepository<Lead>(this.context, this._service, "lead");
					}
				return _leads;
			}
		}
		private Kipon.Xrm.IRepository<Opportunity> _opportunities; 
		public Kipon.Xrm.IRepository<Opportunity> Opportunities
		{
			get
			{
				if (_opportunities == null)
					{
						_opportunities = new CrmRepository<Opportunity>(this.context, this._service, "opportunity");
					}
				return _opportunities;
			}
		}
		private Kipon.Xrm.IRepository<SalesOrder> _salesorders; 
		public Kipon.Xrm.IRepository<SalesOrder> Salesorders
		{
			get
			{
				if (_salesorders == null)
					{
						_salesorders = new CrmRepository<SalesOrder>(this.context, this._service, "salesorder");
					}
				return _salesorders;
			}
		}
		private Kipon.Xrm.IRepository<Quote> _quotes; 
		public Kipon.Xrm.IRepository<Quote> Quotes
		{
			get
			{
				if (_quotes == null)
					{
						_quotes = new CrmRepository<Quote>(this.context, this._service, "quote");
					}
				return _quotes;
			}
		}
		private Kipon.Xrm.IRepository<SystemUser> _systemusers; 
		public Kipon.Xrm.IRepository<SystemUser> Systemusers
		{
			get
			{
				if (_systemusers == null)
					{
						_systemusers = new CrmRepository<SystemUser>(this.context, this._service, "systemuser");
					}
				return _systemusers;
			}
		}
		private Kipon.Xrm.IRepository<Template> _templates; 
		public Kipon.Xrm.IRepository<Template> Templates
		{
			get
			{
				if (_templates == null)
					{
						_templates = new CrmRepository<Template>(this.context, this._service, "template");
					}
				return _templates;
			}
		}
		private Kipon.Xrm.IRepository<kipon_datepoc> _datepocs; 
		public Kipon.Xrm.IRepository<kipon_datepoc> Datepocs
		{
			get
			{
				if (_datepocs == null)
					{
						_datepocs = new CrmRepository<kipon_datepoc>(this.context, this._service, "kipon_datepoc");
					}
				return _datepocs;
			}
		}
		private Kipon.Xrm.IRepository<kipon_number> _numbers; 
		public Kipon.Xrm.IRepository<kipon_number> Numbers
		{
			get
			{
				if (_numbers == null)
					{
						_numbers = new CrmRepository<kipon_number>(this.context, this._service, "kipon_number");
					}
				return _numbers;
			}
		}
	}
	[Kipon.Xrm.Attributes.Export(typeof(IAdminUnitOfWork))]
	[Kipon.Xrm.Attributes.Export(typeof(Kipon.Xrm.IAdminUnitOfWork))]
	public sealed partial class AdminCrmUnitOfWork : IAdminUnitOfWork, IDisposable, Kipon.Xrm.IService
	{
		private SolidContextService context;
		private IOrganizationService _service;
		public AdminCrmUnitOfWork(IOrganizationService orgService)
		{
			this._service = orgService;
			this.context = new SolidContextService(_service);
		}

        public void Dispose()
        {
            context.Dispose();
        }

        public R ExecuteRequest<R>(OrganizationRequest request) where R : OrganizationResponse
        {
            return (R)this.context.Execute(request);
        }

        public OrganizationResponse Execute(OrganizationRequest request)
        {
            return this.context.Execute(request);
        }


        public Guid Create(Entity entity)
        {
            return this._service.Create(entity);
        }

        public void Update(Entity entity)
        {
            this._service.Update(entity);
        }

        public void Delete(Entity entity)
        {
            this._service.Delete(entity.LogicalName, entity.Id);
        }

        public void ClearContext()
        {
            var candidates = this.context.GetAttachedEntities().ToArray();
            foreach (var can in candidates) 
            {
                context.Detach(can);
            }
        }

        public void Detach(string logicalName, params Guid[] ids)
        {
            if (this.context != null)
            {
                var candidates = (from c in this.context.GetAttachedEntities() where c.LogicalName == logicalName select c);
                if (ids != null && ids.Length > 0)
                {
                    candidates = (from c in candidates where ids.Contains(c.Id) select c);
                }
                foreach (var r in candidates.ToArray())
                {
                    context.Detach(r);
                }
            }
        }

        public void Detach(Microsoft.Xrm.Sdk.EntityReference eref)
        {
            this.Detach(eref.LogicalName, eref.Id);
        }

        public void Detach(Microsoft.Xrm.Sdk.Entity ent)
        {
            this.Detach(ent.LogicalName, ent.Id);
        }

        public Kipon.Xrm.ServiceAPI.IEntityCache Cache => this.context;

		void Kipon.Xrm.IService.OnStepFinalized()
		{
			foreach (var e in this.context.GetAttachedEntities().ToArray()) this.context.Detach(e);
		}

		private Kipon.Xrm.IRepository<Account> _accounts; 
		public Kipon.Xrm.IRepository<Account> Accounts
		{
			get
			{
				if (_accounts == null)
					{
						_accounts = new CrmRepository<Account>(this.context, this._service, "account");
					}
				return _accounts;
			}
		}
		private Kipon.Xrm.IRepository<Appointment> _appointments; 
		public Kipon.Xrm.IRepository<Appointment> Appointments
		{
			get
			{
				if (_appointments == null)
					{
						_appointments = new CrmRepository<Appointment>(this.context, this._service, "appointment");
					}
				return _appointments;
			}
		}
		private Kipon.Xrm.IRepository<Email> _emails; 
		public Kipon.Xrm.IRepository<Email> Emails
		{
			get
			{
				if (_emails == null)
					{
						_emails = new CrmRepository<Email>(this.context, this._service, "email");
					}
				return _emails;
			}
		}
		private Kipon.Xrm.IRepository<PhoneCall> _phonecalls; 
		public Kipon.Xrm.IRepository<PhoneCall> Phonecalls
		{
			get
			{
				if (_phonecalls == null)
					{
						_phonecalls = new CrmRepository<PhoneCall>(this.context, this._service, "phonecall");
					}
				return _phonecalls;
			}
		}
		private Kipon.Xrm.IRepository<Contact> _contacts; 
		public Kipon.Xrm.IRepository<Contact> Contacts
		{
			get
			{
				if (_contacts == null)
					{
						_contacts = new CrmRepository<Contact>(this.context, this._service, "contact");
					}
				return _contacts;
			}
		}
		private Kipon.Xrm.IRepository<Invoice> _invoices; 
		public Kipon.Xrm.IRepository<Invoice> Invoices
		{
			get
			{
				if (_invoices == null)
					{
						_invoices = new CrmRepository<Invoice>(this.context, this._service, "invoice");
					}
				return _invoices;
			}
		}
		private Kipon.Xrm.IRepository<kipon_multitest> _multitests; 
		public Kipon.Xrm.IRepository<kipon_multitest> Multitests
		{
			get
			{
				if (_multitests == null)
					{
						_multitests = new CrmRepository<kipon_multitest>(this.context, this._service, "kipon_multitest");
					}
				return _multitests;
			}
		}
		private Kipon.Xrm.IRepository<kipon_vetest> _vetests; 
		public Kipon.Xrm.IRepository<kipon_vetest> Vetests
		{
			get
			{
				if (_vetests == null)
					{
						_vetests = new CrmRepository<kipon_vetest>(this.context, this._service, "kipon_vetest");
					}
				return _vetests;
			}
		}
		private Kipon.Xrm.IRepository<Lead> _leads; 
		public Kipon.Xrm.IRepository<Lead> Leads
		{
			get
			{
				if (_leads == null)
					{
						_leads = new CrmRepository<Lead>(this.context, this._service, "lead");
					}
				return _leads;
			}
		}
		private Kipon.Xrm.IRepository<Opportunity> _opportunities; 
		public Kipon.Xrm.IRepository<Opportunity> Opportunities
		{
			get
			{
				if (_opportunities == null)
					{
						_opportunities = new CrmRepository<Opportunity>(this.context, this._service, "opportunity");
					}
				return _opportunities;
			}
		}
		private Kipon.Xrm.IRepository<SalesOrder> _salesorders; 
		public Kipon.Xrm.IRepository<SalesOrder> Salesorders
		{
			get
			{
				if (_salesorders == null)
					{
						_salesorders = new CrmRepository<SalesOrder>(this.context, this._service, "salesorder");
					}
				return _salesorders;
			}
		}
		private Kipon.Xrm.IRepository<Quote> _quotes; 
		public Kipon.Xrm.IRepository<Quote> Quotes
		{
			get
			{
				if (_quotes == null)
					{
						_quotes = new CrmRepository<Quote>(this.context, this._service, "quote");
					}
				return _quotes;
			}
		}
		private Kipon.Xrm.IRepository<SystemUser> _systemusers; 
		public Kipon.Xrm.IRepository<SystemUser> Systemusers
		{
			get
			{
				if (_systemusers == null)
					{
						_systemusers = new CrmRepository<SystemUser>(this.context, this._service, "systemuser");
					}
				return _systemusers;
			}
		}
		private Kipon.Xrm.IRepository<Template> _templates; 
		public Kipon.Xrm.IRepository<Template> Templates
		{
			get
			{
				if (_templates == null)
					{
						_templates = new CrmRepository<Template>(this.context, this._service, "template");
					}
				return _templates;
			}
		}
		private Kipon.Xrm.IRepository<kipon_datepoc> _datepocs; 
		public Kipon.Xrm.IRepository<kipon_datepoc> Datepocs
		{
			get
			{
				if (_datepocs == null)
					{
						_datepocs = new CrmRepository<kipon_datepoc>(this.context, this._service, "kipon_datepoc");
					}
				return _datepocs;
			}
		}
		private Kipon.Xrm.IRepository<kipon_number> _numbers; 
		public Kipon.Xrm.IRepository<kipon_number> Numbers
		{
			get
			{
				if (_numbers == null)
					{
						_numbers = new CrmRepository<kipon_number>(this.context, this._service, "kipon_number");
					}
				return _numbers;
			}
		}
	}
	public partial interface IAccountTarget : Kipon.Xrm.Target<Account>{ }
	public partial interface IAccountPreimage : Kipon.Xrm.Preimage<Account>{ }
	public partial interface IAccountPostimage : Kipon.Xrm.Postimage<Account>{ }
	public partial interface IAccountMergedimage : Kipon.Xrm.Mergedimage<Account>{ }
	public sealed partial class Account :
		IAccountTarget,
		IAccountPreimage,
		IAccountPostimage,
		IAccountMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface IAppointmentTarget : Kipon.Xrm.Target<Appointment>{ }
	public partial interface IAppointmentPreimage : Kipon.Xrm.Preimage<Appointment>{ }
	public partial interface IAppointmentPostimage : Kipon.Xrm.Postimage<Appointment>{ }
	public partial interface IAppointmentMergedimage : Kipon.Xrm.Mergedimage<Appointment>{ }
	public sealed partial class Appointment :
		IAppointmentTarget,
		IAppointmentPreimage,
		IAppointmentPostimage,
		IAppointmentMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface IEmailTarget : Kipon.Xrm.Target<Email>{ }
	public partial interface IEmailPreimage : Kipon.Xrm.Preimage<Email>{ }
	public partial interface IEmailPostimage : Kipon.Xrm.Postimage<Email>{ }
	public partial interface IEmailMergedimage : Kipon.Xrm.Mergedimage<Email>{ }
	public sealed partial class Email :
		IEmailTarget,
		IEmailPreimage,
		IEmailPostimage,
		IEmailMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface IPhoneCallTarget : Kipon.Xrm.Target<PhoneCall>{ }
	public partial interface IPhoneCallPreimage : Kipon.Xrm.Preimage<PhoneCall>{ }
	public partial interface IPhoneCallPostimage : Kipon.Xrm.Postimage<PhoneCall>{ }
	public partial interface IPhoneCallMergedimage : Kipon.Xrm.Mergedimage<PhoneCall>{ }
	public sealed partial class PhoneCall :
		IPhoneCallTarget,
		IPhoneCallPreimage,
		IPhoneCallPostimage,
		IPhoneCallMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface IContactTarget : Kipon.Xrm.Target<Contact>{ }
	public partial interface IContactPreimage : Kipon.Xrm.Preimage<Contact>{ }
	public partial interface IContactPostimage : Kipon.Xrm.Postimage<Contact>{ }
	public partial interface IContactMergedimage : Kipon.Xrm.Mergedimage<Contact>{ }
	public sealed partial class Contact :
		IContactTarget,
		IContactPreimage,
		IContactPostimage,
		IContactMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface IInvoiceTarget : Kipon.Xrm.Target<Invoice>{ }
	public partial interface IInvoicePreimage : Kipon.Xrm.Preimage<Invoice>{ }
	public partial interface IInvoicePostimage : Kipon.Xrm.Postimage<Invoice>{ }
	public partial interface IInvoiceMergedimage : Kipon.Xrm.Mergedimage<Invoice>{ }
	public sealed partial class Invoice :
		IInvoiceTarget,
		IInvoicePreimage,
		IInvoicePostimage,
		IInvoiceMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface Ikipon_multitestTarget : Kipon.Xrm.Target<kipon_multitest>{ }
	public partial interface Ikipon_multitestPreimage : Kipon.Xrm.Preimage<kipon_multitest>{ }
	public partial interface Ikipon_multitestPostimage : Kipon.Xrm.Postimage<kipon_multitest>{ }
	public partial interface Ikipon_multitestMergedimage : Kipon.Xrm.Mergedimage<kipon_multitest>{ }
	public sealed partial class kipon_multitest :
		Ikipon_multitestTarget,
		Ikipon_multitestPreimage,
		Ikipon_multitestPostimage,
		Ikipon_multitestMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface Ikipon_vetestTarget : Kipon.Xrm.Target<kipon_vetest>{ }
	public partial interface Ikipon_vetestPreimage : Kipon.Xrm.Preimage<kipon_vetest>{ }
	public partial interface Ikipon_vetestPostimage : Kipon.Xrm.Postimage<kipon_vetest>{ }
	public partial interface Ikipon_vetestMergedimage : Kipon.Xrm.Mergedimage<kipon_vetest>{ }
	public sealed partial class kipon_vetest :
		Ikipon_vetestTarget,
		Ikipon_vetestPreimage,
		Ikipon_vetestPostimage,
		Ikipon_vetestMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface ILeadTarget : Kipon.Xrm.Target<Lead>{ }
	public partial interface ILeadPreimage : Kipon.Xrm.Preimage<Lead>{ }
	public partial interface ILeadPostimage : Kipon.Xrm.Postimage<Lead>{ }
	public partial interface ILeadMergedimage : Kipon.Xrm.Mergedimage<Lead>{ }
	public sealed partial class Lead :
		ILeadTarget,
		ILeadPreimage,
		ILeadPostimage,
		ILeadMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface IOpportunityTarget : Kipon.Xrm.Target<Opportunity>{ }
	public partial interface IOpportunityPreimage : Kipon.Xrm.Preimage<Opportunity>{ }
	public partial interface IOpportunityPostimage : Kipon.Xrm.Postimage<Opportunity>{ }
	public partial interface IOpportunityMergedimage : Kipon.Xrm.Mergedimage<Opportunity>{ }
	public sealed partial class Opportunity :
		IOpportunityTarget,
		IOpportunityPreimage,
		IOpportunityPostimage,
		IOpportunityMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface ISalesOrderTarget : Kipon.Xrm.Target<SalesOrder>{ }
	public partial interface ISalesOrderPreimage : Kipon.Xrm.Preimage<SalesOrder>{ }
	public partial interface ISalesOrderPostimage : Kipon.Xrm.Postimage<SalesOrder>{ }
	public partial interface ISalesOrderMergedimage : Kipon.Xrm.Mergedimage<SalesOrder>{ }
	public sealed partial class SalesOrder :
		ISalesOrderTarget,
		ISalesOrderPreimage,
		ISalesOrderPostimage,
		ISalesOrderMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface IQuoteTarget : Kipon.Xrm.Target<Quote>{ }
	public partial interface IQuotePreimage : Kipon.Xrm.Preimage<Quote>{ }
	public partial interface IQuotePostimage : Kipon.Xrm.Postimage<Quote>{ }
	public partial interface IQuoteMergedimage : Kipon.Xrm.Mergedimage<Quote>{ }
	public sealed partial class Quote :
		IQuoteTarget,
		IQuotePreimage,
		IQuotePostimage,
		IQuoteMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface ISystemUserTarget : Kipon.Xrm.Target<SystemUser>{ }
	public partial interface ISystemUserPreimage : Kipon.Xrm.Preimage<SystemUser>{ }
	public partial interface ISystemUserPostimage : Kipon.Xrm.Postimage<SystemUser>{ }
	public partial interface ISystemUserMergedimage : Kipon.Xrm.Mergedimage<SystemUser>{ }
	public sealed partial class SystemUser :
		ISystemUserTarget,
		ISystemUserPreimage,
		ISystemUserPostimage,
		ISystemUserMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface ITemplateTarget : Kipon.Xrm.Target<Template>{ }
	public partial interface ITemplatePreimage : Kipon.Xrm.Preimage<Template>{ }
	public partial interface ITemplatePostimage : Kipon.Xrm.Postimage<Template>{ }
	public partial interface ITemplateMergedimage : Kipon.Xrm.Mergedimage<Template>{ }
	public sealed partial class Template :
		ITemplateTarget,
		ITemplatePreimage,
		ITemplatePostimage,
		ITemplateMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface Ikipon_datepocTarget : Kipon.Xrm.Target<kipon_datepoc>{ }
	public partial interface Ikipon_datepocPreimage : Kipon.Xrm.Preimage<kipon_datepoc>{ }
	public partial interface Ikipon_datepocPostimage : Kipon.Xrm.Postimage<kipon_datepoc>{ }
	public partial interface Ikipon_datepocMergedimage : Kipon.Xrm.Mergedimage<kipon_datepoc>{ }
	public sealed partial class kipon_datepoc :
		Ikipon_datepocTarget,
		Ikipon_datepocPreimage,
		Ikipon_datepocPostimage,
		Ikipon_datepocMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public partial interface Ikipon_numberTarget : Kipon.Xrm.Target<kipon_number>{ }
	public partial interface Ikipon_numberPreimage : Kipon.Xrm.Preimage<kipon_number>{ }
	public partial interface Ikipon_numberPostimage : Kipon.Xrm.Postimage<kipon_number>{ }
	public partial interface Ikipon_numberMergedimage : Kipon.Xrm.Mergedimage<kipon_number>{ }
	public sealed partial class kipon_number :
		Ikipon_numberTarget,
		Ikipon_numberPreimage,
		Ikipon_numberPostimage,
		Ikipon_numberMergedimage
	{
		public Microsoft.Xrm.Sdk.AttributeCollection TargetAttributes { get; set; }
		public Microsoft.Xrm.Sdk.AttributeCollection PreimageAttributes { get; set; }
	}
	public sealed class AccountReference : Kipon.Xrm.TargetReference<Account>
	{
		public AccountReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Account.EntityLogicalName;
	}
	public sealed class AppointmentReference : Kipon.Xrm.TargetReference<Appointment>
	{
		public AppointmentReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Appointment.EntityLogicalName;
	}
	public sealed class EmailReference : Kipon.Xrm.TargetReference<Email>
	{
		public EmailReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Email.EntityLogicalName;
	}
	public sealed class PhoneCallReference : Kipon.Xrm.TargetReference<PhoneCall>
	{
		public PhoneCallReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => PhoneCall.EntityLogicalName;
	}
	public sealed class ContactReference : Kipon.Xrm.TargetReference<Contact>
	{
		public ContactReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Contact.EntityLogicalName;
	}
	public sealed class InvoiceReference : Kipon.Xrm.TargetReference<Invoice>
	{
		public InvoiceReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Invoice.EntityLogicalName;
	}
	public sealed class kipon_multitestReference : Kipon.Xrm.TargetReference<kipon_multitest>
	{
		public kipon_multitestReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => kipon_multitest.EntityLogicalName;
	}
	public sealed class kipon_vetestReference : Kipon.Xrm.TargetReference<kipon_vetest>
	{
		public kipon_vetestReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => kipon_vetest.EntityLogicalName;
	}
	public sealed class LeadReference : Kipon.Xrm.TargetReference<Lead>
	{
		public LeadReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Lead.EntityLogicalName;
	}
	public sealed class OpportunityReference : Kipon.Xrm.TargetReference<Opportunity>
	{
		public OpportunityReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Opportunity.EntityLogicalName;
	}
	public sealed class SalesOrderReference : Kipon.Xrm.TargetReference<SalesOrder>
	{
		public SalesOrderReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => SalesOrder.EntityLogicalName;
	}
	public sealed class QuoteReference : Kipon.Xrm.TargetReference<Quote>
	{
		public QuoteReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Quote.EntityLogicalName;
	}
	public sealed class SystemUserReference : Kipon.Xrm.TargetReference<SystemUser>
	{
		public SystemUserReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => SystemUser.EntityLogicalName;
	}
	public sealed class TemplateReference : Kipon.Xrm.TargetReference<Template>
	{
		public TemplateReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => Template.EntityLogicalName;
	}
	public sealed class kipon_datepocReference : Kipon.Xrm.TargetReference<kipon_datepoc>
	{
		public kipon_datepocReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => kipon_datepoc.EntityLogicalName;
	}
	public sealed class kipon_numberReference : Kipon.Xrm.TargetReference<kipon_number>
	{
		public kipon_numberReference(EntityReference target): base(target){ }
		protected sealed override string _logicalName => kipon_number.EntityLogicalName;
	}
	public partial interface IUnitOfWork : Kipon.Xrm.IUnitOfWork
	{
		#region entity repositories
		Kipon.Xrm.IRepository<Account> Accounts { get; }
		Kipon.Xrm.IRepository<Appointment> Appointments { get; }
		Kipon.Xrm.IRepository<Email> Emails { get; }
		Kipon.Xrm.IRepository<PhoneCall> Phonecalls { get; }
		Kipon.Xrm.IRepository<Contact> Contacts { get; }
		Kipon.Xrm.IRepository<Invoice> Invoices { get; }
		Kipon.Xrm.IRepository<kipon_multitest> Multitests { get; }
		Kipon.Xrm.IRepository<kipon_vetest> Vetests { get; }
		Kipon.Xrm.IRepository<Lead> Leads { get; }
		Kipon.Xrm.IRepository<Opportunity> Opportunities { get; }
		Kipon.Xrm.IRepository<SalesOrder> Salesorders { get; }
		Kipon.Xrm.IRepository<Quote> Quotes { get; }
		Kipon.Xrm.IRepository<SystemUser> Systemusers { get; }
		Kipon.Xrm.IRepository<Template> Templates { get; }
		Kipon.Xrm.IRepository<kipon_datepoc> Datepocs { get; }
		Kipon.Xrm.IRepository<kipon_number> Numbers { get; }
		#endregion
	}
	public partial interface IAdminUnitOfWork : Kipon.Xrm.IAdminUnitOfWork, IUnitOfWork { }
   public class CrmRepository<T> : Kipon.Xrm.IRepository<T> where T: Microsoft.Xrm.Sdk.Entity, new() 
    {
        private SolidContextService context;
        private Microsoft.Xrm.Sdk.IOrganizationService _service;

        public string LogicalName { get; private set; }

        public CrmRepository(SolidContextService context, Microsoft.Xrm.Sdk.IOrganizationService service, string logicalName)
        {
            this.context = context;
            this._service = service;
            this.LogicalName = logicalName;
        }

        public IQueryable<T> GetQuery()
        {
            var q = context.CreateQuery<T>();
            return new Kipon.Xrm.Implementations.NoCacheQueryable<T>(q, this.context);
        }

        public void Delete(T entity)
        {
            this._service.Delete(entity.LogicalName, entity.Id);
        }

        public void Add(T entity)
        {
            this._service.Create(entity);
        }

        public void Update(T entity)
        {
            this._service.Update(entity);
        }

        public T GetById(Guid id)
        {
            return this._service.Retrieve(this.LogicalName, id, new Microsoft.Xrm.Sdk.Query.ColumnSet(true)).ToEntity<T>();
        }

        public void Attach(T entity)
        {
            this.context.Attach(entity);
        }

        public void Detach(T entity)
        {
            this.context.Detach(entity);
        }
    }
	public enum BudgetEnum
	{
		NoCommittedBudget = 0,
		MAyBuy = 1,
		CanBuy = 2,
		WillBuy = 3
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum AccountState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	public partial class Account
	{
		public enum PreferredContactMethodCodeEnum
		{
			Any = 1,
			Email = 2,
			Phone = 3,
			Fax = 4,
			Mail = 5,
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredcontactmethodcode")]
		public PreferredContactMethodCodeEnum? PreferredContactMethodCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredcontactmethodcode");
				if (optionSet != null)
				{
					return (PreferredContactMethodCodeEnum)optionSet.Value;
				}
				return null;
			}
			set
			{
				this.OnPropertyChanging("PreferredContactMethodCode");
				if (value != null)
				{
					this.SetAttributeValue("preferredcontactmethodcode", new Microsoft.Xrm.Sdk.OptionSetValue((int)value.Value));
					this.OnPropertyChanged("PreferredContactMethodCode");
					return;
				}
				this.SetAttributeValue("preferredcontactmethodcode", null);
				this.OnPropertyChanged("PreferredContactMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("new_multiselectbudget")]
		public BudgetEnum[] MultiSelectBudget
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValueCollection optionSetValues = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("new_multiselectbudget");
				if (optionSetValues != null && optionSetValues.Count > 0)
				{
					return (from v in optionSetValues select (BudgetEnum)v.Value).ToArray();
				}
				return null;
			}
			set
			{
				this.OnPropertyChanging("new_multiselectbudget");
				if (value != null && value.Length > 0)
				{
					var result = new Microsoft.Xrm.Sdk.OptionSetValueCollection();
					foreach (var v in value) result.Add(new Microsoft.Xrm.Sdk.OptionSetValue((int)v));
					this.SetAttributeValue("new_multiselectbudget", result);
					this.OnPropertyChanged("new_multiselectbudget");
					return;
				}
				this.SetAttributeValue("new_multiselectbudget", null);
				this.OnPropertyChanged("new_multiselectbudget");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("accountcategorycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue AccountCategoryCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("accountcategorycode");
			set
			{
				this.OnPropertyChanging("AccountCategoryCode");
					this.SetAttributeValue("accountcategorycode", value);
				this.OnPropertyChanged("AccountCategoryCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("accountclassificationcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue AccountClassificationCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("accountclassificationcode");
			set
			{
				this.OnPropertyChanging("AccountClassificationCode");
					this.SetAttributeValue("accountclassificationcode", value);
				this.OnPropertyChanged("AccountClassificationCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("accountratingcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue AccountRatingCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("accountratingcode");
			set
			{
				this.OnPropertyChanging("AccountRatingCode");
					this.SetAttributeValue("accountratingcode", value);
				this.OnPropertyChanged("AccountRatingCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address1_AddressTypeCode");
					this.SetAttributeValue("address1_addresstypecode", value);
				this.OnPropertyChanged("Address1_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_freighttermscode");
			set
			{
				this.OnPropertyChanging("Address1_FreightTermsCode");
					this.SetAttributeValue("address1_freighttermscode", value);
				this.OnPropertyChanged("Address1_FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address1_ShippingMethodCode");
					this.SetAttributeValue("address1_shippingmethodcode", value);
				this.OnPropertyChanged("Address1_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address2_AddressTypeCode");
					this.SetAttributeValue("address2_addresstypecode", value);
				this.OnPropertyChanged("Address2_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_freighttermscode");
			set
			{
				this.OnPropertyChanging("Address2_FreightTermsCode");
					this.SetAttributeValue("address2_freighttermscode", value);
				this.OnPropertyChanged("Address2_FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address2_ShippingMethodCode");
					this.SetAttributeValue("address2_shippingmethodcode", value);
				this.OnPropertyChanged("Address2_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("businesstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue BusinessTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("businesstypecode");
			set
			{
				this.OnPropertyChanging("BusinessTypeCode");
					this.SetAttributeValue("businesstypecode", value);
				this.OnPropertyChanged("BusinessTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("customersizecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue CustomerSizeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("customersizecode");
			set
			{
				this.OnPropertyChanging("CustomerSizeCode");
					this.SetAttributeValue("customersizecode", value);
				this.OnPropertyChanged("CustomerSizeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("customertypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue CustomerTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("customertypecode");
			set
			{
				this.OnPropertyChanging("CustomerTypeCode");
					this.SetAttributeValue("customertypecode", value);
				this.OnPropertyChanged("CustomerTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("industrycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue IndustryCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("industrycode");
			set
			{
				this.OnPropertyChanging("IndustryCode");
					this.SetAttributeValue("industrycode", value);
				this.OnPropertyChanged("IndustryCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("ownershipcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue OwnershipCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("ownershipcode");
			set
			{
				this.OnPropertyChanging("OwnershipCode");
					this.SetAttributeValue("ownershipcode", value);
				this.OnPropertyChanged("OwnershipCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("paymenttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PaymentTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("paymenttermscode");
			set
			{
				this.OnPropertyChanging("PaymentTermsCode");
					this.SetAttributeValue("paymenttermscode", value);
				this.OnPropertyChanged("PaymentTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredappointmentdaycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredAppointmentDayCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredappointmentdaycode");
			set
			{
				this.OnPropertyChanging("PreferredAppointmentDayCode");
					this.SetAttributeValue("preferredappointmentdaycode", value);
				this.OnPropertyChanged("PreferredAppointmentDayCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredappointmenttimecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredAppointmentTimeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredappointmenttimecode");
			set
			{
				this.OnPropertyChanging("PreferredAppointmentTimeCode");
					this.SetAttributeValue("preferredappointmenttimecode", value);
				this.OnPropertyChanged("PreferredAppointmentTimeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("shippingmethodcode");
			set
			{
				this.OnPropertyChanging("ShippingMethodCode");
					this.SetAttributeValue("shippingmethodcode", value);
				this.OnPropertyChanged("ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("territorycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue TerritoryCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("territorycode");
			set
			{
				this.OnPropertyChanging("TerritoryCode");
					this.SetAttributeValue("territorycode", value);
				this.OnPropertyChanged("TerritoryCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public AccountState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((AccountState)(System.Enum.ToObject(typeof(AccountState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum AppointmentState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 3,
	}
	public partial class Appointment
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("attachmenterrors")]
		public Microsoft.Xrm.Sdk.OptionSetValue AttachmentErrors
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("attachmenterrors");
			set
			{
				this.OnPropertyChanging("AttachmentErrors");
					this.SetAttributeValue("attachmenterrors", value);
				this.OnPropertyChanged("AttachmentErrors");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("instancetypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue InstanceTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instancetypecode");
			set
			{
				this.OnPropertyChanging("InstanceTypeCode");
					this.SetAttributeValue("instancetypecode", value);
				this.OnPropertyChanged("InstanceTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			set
			{
				this.OnPropertyChanging("PriorityCode");
					this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public AppointmentState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((AppointmentState)(System.Enum.ToObject(typeof(AppointmentState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum EmailState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
	}
	public partial class Email
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("correlationmethod")]
		public Microsoft.Xrm.Sdk.OptionSetValue CorrelationMethod
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("correlationmethod");
			set
			{
				this.OnPropertyChanging("CorrelationMethod");
					this.SetAttributeValue("correlationmethod", value);
				this.OnPropertyChanged("CorrelationMethod");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("deliveryprioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue DeliveryPriorityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("deliveryprioritycode");
			set
			{
				this.OnPropertyChanging("DeliveryPriorityCode");
					this.SetAttributeValue("deliveryprioritycode", value);
				this.OnPropertyChanged("DeliveryPriorityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("emailreminderstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue EmailReminderStatus
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("emailreminderstatus");
			set
			{
				this.OnPropertyChanging("EmailReminderStatus");
					this.SetAttributeValue("emailreminderstatus", value);
				this.OnPropertyChanged("EmailReminderStatus");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("emailremindertype")]
		public Microsoft.Xrm.Sdk.OptionSetValue EmailReminderType
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("emailremindertype");
			set
			{
				this.OnPropertyChanging("EmailReminderType");
					this.SetAttributeValue("emailremindertype", value);
				this.OnPropertyChanged("EmailReminderType");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("notifications")]
		public Microsoft.Xrm.Sdk.OptionSetValue Notifications
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("notifications");
			set
			{
				this.OnPropertyChanging("Notifications");
					this.SetAttributeValue("notifications", value);
				this.OnPropertyChanged("Notifications");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			set
			{
				this.OnPropertyChanging("PriorityCode");
					this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public EmailState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((EmailState)(System.Enum.ToObject(typeof(EmailState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum PhoneCallState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
	}
	public partial class PhoneCall
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			set
			{
				this.OnPropertyChanging("PriorityCode");
					this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public PhoneCallState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((PhoneCallState)(System.Enum.ToObject(typeof(PhoneCallState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum ContactState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	public partial class Contact
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("accountrolecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue AccountRoleCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("accountrolecode");
			set
			{
				this.OnPropertyChanging("AccountRoleCode");
					this.SetAttributeValue("accountrolecode", value);
				this.OnPropertyChanged("AccountRoleCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address1_AddressTypeCode");
					this.SetAttributeValue("address1_addresstypecode", value);
				this.OnPropertyChanged("Address1_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_freighttermscode");
			set
			{
				this.OnPropertyChanging("Address1_FreightTermsCode");
					this.SetAttributeValue("address1_freighttermscode", value);
				this.OnPropertyChanged("Address1_FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address1_ShippingMethodCode");
					this.SetAttributeValue("address1_shippingmethodcode", value);
				this.OnPropertyChanged("Address1_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address2_AddressTypeCode");
					this.SetAttributeValue("address2_addresstypecode", value);
				this.OnPropertyChanged("Address2_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_freighttermscode");
			set
			{
				this.OnPropertyChanging("Address2_FreightTermsCode");
					this.SetAttributeValue("address2_freighttermscode", value);
				this.OnPropertyChanged("Address2_FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address2_ShippingMethodCode");
					this.SetAttributeValue("address2_shippingmethodcode", value);
				this.OnPropertyChanged("Address2_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address3_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address3_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address3_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address3_AddressTypeCode");
					this.SetAttributeValue("address3_addresstypecode", value);
				this.OnPropertyChanged("Address3_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address3_freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address3_FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address3_freighttermscode");
			set
			{
				this.OnPropertyChanging("Address3_FreightTermsCode");
					this.SetAttributeValue("address3_freighttermscode", value);
				this.OnPropertyChanged("Address3_FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address3_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address3_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address3_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address3_ShippingMethodCode");
					this.SetAttributeValue("address3_shippingmethodcode", value);
				this.OnPropertyChanged("Address3_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("customersizecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue CustomerSizeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("customersizecode");
			set
			{
				this.OnPropertyChanging("CustomerSizeCode");
					this.SetAttributeValue("customersizecode", value);
				this.OnPropertyChanged("CustomerSizeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("customertypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue CustomerTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("customertypecode");
			set
			{
				this.OnPropertyChanging("CustomerTypeCode");
					this.SetAttributeValue("customertypecode", value);
				this.OnPropertyChanged("CustomerTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("educationcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue EducationCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("educationcode");
			set
			{
				this.OnPropertyChanging("EducationCode");
					this.SetAttributeValue("educationcode", value);
				this.OnPropertyChanged("EducationCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("familystatuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue FamilyStatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("familystatuscode");
			set
			{
				this.OnPropertyChanging("FamilyStatusCode");
					this.SetAttributeValue("familystatuscode", value);
				this.OnPropertyChanged("FamilyStatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("gendercode")]
		public Microsoft.Xrm.Sdk.OptionSetValue GenderCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("gendercode");
			set
			{
				this.OnPropertyChanging("GenderCode");
					this.SetAttributeValue("gendercode", value);
				this.OnPropertyChanged("GenderCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("haschildrencode")]
		public Microsoft.Xrm.Sdk.OptionSetValue HasChildrenCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("haschildrencode");
			set
			{
				this.OnPropertyChanging("HasChildrenCode");
					this.SetAttributeValue("haschildrencode", value);
				this.OnPropertyChanged("HasChildrenCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("leadsourcecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue LeadSourceCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("leadsourcecode");
			set
			{
				this.OnPropertyChanging("LeadSourceCode");
					this.SetAttributeValue("leadsourcecode", value);
				this.OnPropertyChanged("LeadSourceCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("msdyn_orgchangestatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue msdyn_orgchangestatus
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("msdyn_orgchangestatus");
			set
			{
				this.OnPropertyChanging("msdyn_orgchangestatus");
					this.SetAttributeValue("msdyn_orgchangestatus", value);
				this.OnPropertyChanged("msdyn_orgchangestatus");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("paymenttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PaymentTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("paymenttermscode");
			set
			{
				this.OnPropertyChanging("PaymentTermsCode");
					this.SetAttributeValue("paymenttermscode", value);
				this.OnPropertyChanged("PaymentTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredappointmentdaycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredAppointmentDayCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredappointmentdaycode");
			set
			{
				this.OnPropertyChanging("PreferredAppointmentDayCode");
					this.SetAttributeValue("preferredappointmentdaycode", value);
				this.OnPropertyChanged("PreferredAppointmentDayCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredappointmenttimecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredAppointmentTimeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredappointmenttimecode");
			set
			{
				this.OnPropertyChanging("PreferredAppointmentTimeCode");
					this.SetAttributeValue("preferredappointmenttimecode", value);
				this.OnPropertyChanged("PreferredAppointmentTimeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredcontactmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredContactMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredcontactmethodcode");
			set
			{
				this.OnPropertyChanging("PreferredContactMethodCode");
					this.SetAttributeValue("preferredcontactmethodcode", value);
				this.OnPropertyChanged("PreferredContactMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("shippingmethodcode");
			set
			{
				this.OnPropertyChanging("ShippingMethodCode");
					this.SetAttributeValue("shippingmethodcode", value);
				this.OnPropertyChanged("ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("territorycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue TerritoryCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("territorycode");
			set
			{
				this.OnPropertyChanging("TerritoryCode");
					this.SetAttributeValue("territorycode", value);
				this.OnPropertyChanged("TerritoryCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public ContactState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((ContactState)(System.Enum.ToObject(typeof(ContactState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum InvoiceState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Closed__deprecated_ = 1,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Paid = 2,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 3,
	}
	public partial class Invoice
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("paymenttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PaymentTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("paymenttermscode");
			set
			{
				this.OnPropertyChanging("PaymentTermsCode");
					this.SetAttributeValue("paymenttermscode", value);
				this.OnPropertyChanged("PaymentTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("pricingerrorcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PricingErrorCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("pricingerrorcode");
			set
			{
				this.OnPropertyChanging("PricingErrorCode");
					this.SetAttributeValue("pricingerrorcode", value);
				this.OnPropertyChanged("PricingErrorCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			set
			{
				this.OnPropertyChanging("PriorityCode");
					this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("shippingmethodcode");
			set
			{
				this.OnPropertyChanging("ShippingMethodCode");
					this.SetAttributeValue("shippingmethodcode", value);
				this.OnPropertyChanged("ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("shipto_freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ShipTo_FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("shipto_freighttermscode");
			set
			{
				this.OnPropertyChanging("ShipTo_FreightTermsCode");
					this.SetAttributeValue("shipto_freighttermscode", value);
				this.OnPropertyChanged("ShipTo_FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("skippricecalculation")]
		public Microsoft.Xrm.Sdk.OptionSetValue SkipPriceCalculation
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("skippricecalculation");
			set
			{
				this.OnPropertyChanging("SkipPriceCalculation");
					this.SetAttributeValue("skippricecalculation", value);
				this.OnPropertyChanged("SkipPriceCalculation");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public InvoiceState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((InvoiceState)(System.Enum.ToObject(typeof(InvoiceState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum kipon_multitestState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	public partial class kipon_multitest
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue statuscode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("statuscode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("statuscode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public kipon_multitestState? statecode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((kipon_multitestState)(System.Enum.ToObject(typeof(kipon_multitestState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("statecode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("statecode");
			}
		}
	}
	public partial class kipon_vetest
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("kipon_optionsetfield")]
		public Microsoft.Xrm.Sdk.OptionSetValue kipon_optionsetfield
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("kipon_optionsetfield");
			set
			{
				this.OnPropertyChanging("kipon_optionsetfield");
					this.SetAttributeValue("kipon_optionsetfield", value);
				this.OnPropertyChanged("kipon_optionsetfield");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("kipon_os")]
		public Microsoft.Xrm.Sdk.OptionSetValue kipon_os
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("kipon_os");
			set
			{
				this.OnPropertyChanging("kipon_os");
					this.SetAttributeValue("kipon_os", value);
				this.OnPropertyChanged("kipon_os");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("kipon_multioptionfield")]
		public Microsoft.Xrm.Sdk.OptionSetValueCollection kipon_multioptionfield
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValueCollection>("kipon_multioptionfield");
			set
			{
				this.OnPropertyChanging("kipon_multioptionfield");
					this.SetAttributeValue("kipon_multioptionfield", value);
				this.OnPropertyChanged("kipon_multioptionfield");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum LeadState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Qualified = 1,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Disqualified = 2,
	}
	public partial class Lead
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address1_AddressTypeCode");
					this.SetAttributeValue("address1_addresstypecode", value);
				this.OnPropertyChanged("Address1_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address1_ShippingMethodCode");
					this.SetAttributeValue("address1_shippingmethodcode", value);
				this.OnPropertyChanged("Address1_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address2_AddressTypeCode");
					this.SetAttributeValue("address2_addresstypecode", value);
				this.OnPropertyChanged("Address2_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address2_ShippingMethodCode");
					this.SetAttributeValue("address2_shippingmethodcode", value);
				this.OnPropertyChanged("Address2_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("budgetstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue BudgetStatus
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("budgetstatus");
			set
			{
				this.OnPropertyChanging("BudgetStatus");
					this.SetAttributeValue("budgetstatus", value);
				this.OnPropertyChanged("BudgetStatus");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("industrycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue IndustryCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("industrycode");
			set
			{
				this.OnPropertyChanging("IndustryCode");
					this.SetAttributeValue("industrycode", value);
				this.OnPropertyChanged("IndustryCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("initialcommunication")]
		public Microsoft.Xrm.Sdk.OptionSetValue InitialCommunication
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("initialcommunication");
			set
			{
				this.OnPropertyChanging("InitialCommunication");
					this.SetAttributeValue("initialcommunication", value);
				this.OnPropertyChanged("InitialCommunication");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("leadqualitycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue LeadQualityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("leadqualitycode");
			set
			{
				this.OnPropertyChanging("LeadQualityCode");
					this.SetAttributeValue("leadqualitycode", value);
				this.OnPropertyChanged("LeadQualityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("leadsourcecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue LeadSourceCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("leadsourcecode");
			set
			{
				this.OnPropertyChanging("LeadSourceCode");
					this.SetAttributeValue("leadsourcecode", value);
				this.OnPropertyChanged("LeadSourceCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("need")]
		public Microsoft.Xrm.Sdk.OptionSetValue Need
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("need");
			set
			{
				this.OnPropertyChanging("Need");
					this.SetAttributeValue("need", value);
				this.OnPropertyChanged("Need");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredcontactmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredContactMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredcontactmethodcode");
			set
			{
				this.OnPropertyChanging("PreferredContactMethodCode");
					this.SetAttributeValue("preferredcontactmethodcode", value);
				this.OnPropertyChanged("PreferredContactMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			set
			{
				this.OnPropertyChanging("PriorityCode");
					this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("purchaseprocess")]
		public Microsoft.Xrm.Sdk.OptionSetValue PurchaseProcess
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("purchaseprocess");
			set
			{
				this.OnPropertyChanging("PurchaseProcess");
					this.SetAttributeValue("purchaseprocess", value);
				this.OnPropertyChanged("PurchaseProcess");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("purchasetimeframe")]
		public Microsoft.Xrm.Sdk.OptionSetValue PurchaseTimeFrame
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("purchasetimeframe");
			set
			{
				this.OnPropertyChanging("PurchaseTimeFrame");
					this.SetAttributeValue("purchasetimeframe", value);
				this.OnPropertyChanged("PurchaseTimeFrame");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("salesstage")]
		public Microsoft.Xrm.Sdk.OptionSetValue SalesStage
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("salesstage");
			set
			{
				this.OnPropertyChanging("SalesStage");
					this.SetAttributeValue("salesstage", value);
				this.OnPropertyChanged("SalesStage");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("salesstagecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue SalesStageCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("salesstagecode");
			set
			{
				this.OnPropertyChanging("SalesStageCode");
					this.SetAttributeValue("salesstagecode", value);
				this.OnPropertyChanged("SalesStageCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public LeadState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((LeadState)(System.Enum.ToObject(typeof(LeadState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum OpportunityState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Won = 1,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lost = 2,
	}
	public partial class Opportunity
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("budgetstatus")]
		public BudgetEnum? Budgetstatus
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("budgetstatus");
				if (optionSet != null)
				{
					return (BudgetEnum)optionSet.Value;
				}
				return null;
			}
			set
			{
				this.OnPropertyChanging("Budgetstatus");
				if (value != null)
				{
					this.SetAttributeValue("budgetstatus", new Microsoft.Xrm.Sdk.OptionSetValue((int)value.Value));
					this.OnPropertyChanged("Budgetstatus");
					return;
				}
				this.SetAttributeValue("budgetstatus", null);
				this.OnPropertyChanged("Budgetstatus");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("initialcommunication")]
		public Microsoft.Xrm.Sdk.OptionSetValue InitialCommunication
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("initialcommunication");
			set
			{
				this.OnPropertyChanging("InitialCommunication");
					this.SetAttributeValue("initialcommunication", value);
				this.OnPropertyChanged("InitialCommunication");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("need")]
		public Microsoft.Xrm.Sdk.OptionSetValue Need
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("need");
			set
			{
				this.OnPropertyChanging("Need");
					this.SetAttributeValue("need", value);
				this.OnPropertyChanged("Need");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("opportunityratingcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue OpportunityRatingCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("opportunityratingcode");
			set
			{
				this.OnPropertyChanging("OpportunityRatingCode");
					this.SetAttributeValue("opportunityratingcode", value);
				this.OnPropertyChanged("OpportunityRatingCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("pricingerrorcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PricingErrorCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("pricingerrorcode");
			set
			{
				this.OnPropertyChanging("PricingErrorCode");
					this.SetAttributeValue("pricingerrorcode", value);
				this.OnPropertyChanged("PricingErrorCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			set
			{
				this.OnPropertyChanging("PriorityCode");
					this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("purchaseprocess")]
		public Microsoft.Xrm.Sdk.OptionSetValue PurchaseProcess
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("purchaseprocess");
			set
			{
				this.OnPropertyChanging("PurchaseProcess");
					this.SetAttributeValue("purchaseprocess", value);
				this.OnPropertyChanged("PurchaseProcess");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("purchasetimeframe")]
		public Microsoft.Xrm.Sdk.OptionSetValue PurchaseTimeframe
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("purchasetimeframe");
			set
			{
				this.OnPropertyChanging("PurchaseTimeframe");
					this.SetAttributeValue("purchasetimeframe", value);
				this.OnPropertyChanged("PurchaseTimeframe");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("salesstage")]
		public Microsoft.Xrm.Sdk.OptionSetValue SalesStage
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("salesstage");
			set
			{
				this.OnPropertyChanging("SalesStage");
					this.SetAttributeValue("salesstage", value);
				this.OnPropertyChanged("SalesStage");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("salesstagecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue SalesStageCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("salesstagecode");
			set
			{
				this.OnPropertyChanging("SalesStageCode");
					this.SetAttributeValue("salesstagecode", value);
				this.OnPropertyChanged("SalesStageCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("skippricecalculation")]
		public Microsoft.Xrm.Sdk.OptionSetValue SkipPriceCalculation
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("skippricecalculation");
			set
			{
				this.OnPropertyChanging("SkipPriceCalculation");
					this.SetAttributeValue("skippricecalculation", value);
				this.OnPropertyChanged("SkipPriceCalculation");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("timeline")]
		public Microsoft.Xrm.Sdk.OptionSetValue TimeLine
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("timeline");
			set
			{
				this.OnPropertyChanging("TimeLine");
					this.SetAttributeValue("timeline", value);
				this.OnPropertyChanged("TimeLine");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public OpportunityState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((OpportunityState)(System.Enum.ToObject(typeof(OpportunityState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum SalesOrderState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Submitted = 1,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fulfilled = 3,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Invoiced = 4,
	}
	public partial class SalesOrder
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("freighttermscode");
			set
			{
				this.OnPropertyChanging("FreightTermsCode");
					this.SetAttributeValue("freighttermscode", value);
				this.OnPropertyChanged("FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("paymenttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PaymentTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("paymenttermscode");
			set
			{
				this.OnPropertyChanging("PaymentTermsCode");
					this.SetAttributeValue("paymenttermscode", value);
				this.OnPropertyChanged("PaymentTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("pricingerrorcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PricingErrorCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("pricingerrorcode");
			set
			{
				this.OnPropertyChanging("PricingErrorCode");
					this.SetAttributeValue("pricingerrorcode", value);
				this.OnPropertyChanged("PricingErrorCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			set
			{
				this.OnPropertyChanging("PriorityCode");
					this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("shippingmethodcode");
			set
			{
				this.OnPropertyChanging("ShippingMethodCode");
					this.SetAttributeValue("shippingmethodcode", value);
				this.OnPropertyChanged("ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("shipto_freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ShipTo_FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("shipto_freighttermscode");
			set
			{
				this.OnPropertyChanging("ShipTo_FreightTermsCode");
					this.SetAttributeValue("shipto_freighttermscode", value);
				this.OnPropertyChanged("ShipTo_FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("skippricecalculation")]
		public Microsoft.Xrm.Sdk.OptionSetValue SkipPriceCalculation
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("skippricecalculation");
			set
			{
				this.OnPropertyChanging("SkipPriceCalculation");
					this.SetAttributeValue("skippricecalculation", value);
				this.OnPropertyChanged("SkipPriceCalculation");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public SalesOrderState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((SalesOrderState)(System.Enum.ToObject(typeof(SalesOrderState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum QuoteState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Won = 2,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Closed = 3,
	}
	public partial class Quote
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("freighttermscode");
			set
			{
				this.OnPropertyChanging("FreightTermsCode");
					this.SetAttributeValue("freighttermscode", value);
				this.OnPropertyChanged("FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("paymenttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PaymentTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("paymenttermscode");
			set
			{
				this.OnPropertyChanging("PaymentTermsCode");
					this.SetAttributeValue("paymenttermscode", value);
				this.OnPropertyChanged("PaymentTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("pricingerrorcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PricingErrorCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("pricingerrorcode");
			set
			{
				this.OnPropertyChanging("PricingErrorCode");
					this.SetAttributeValue("pricingerrorcode", value);
				this.OnPropertyChanged("PricingErrorCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("shippingmethodcode");
			set
			{
				this.OnPropertyChanging("ShippingMethodCode");
					this.SetAttributeValue("shippingmethodcode", value);
				this.OnPropertyChanged("ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("shipto_freighttermscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ShipTo_FreightTermsCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("shipto_freighttermscode");
			set
			{
				this.OnPropertyChanging("ShipTo_FreightTermsCode");
					this.SetAttributeValue("shipto_freighttermscode", value);
				this.OnPropertyChanged("ShipTo_FreightTermsCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("skippricecalculation")]
		public Microsoft.Xrm.Sdk.OptionSetValue SkipPriceCalculation
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("skippricecalculation");
			set
			{
				this.OnPropertyChanging("SkipPriceCalculation");
					this.SetAttributeValue("skippricecalculation", value);
				this.OnPropertyChanged("SkipPriceCalculation");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("StatusCode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public QuoteState? StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((QuoteState)(System.Enum.ToObject(typeof(QuoteState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
	}
	public partial class SystemUser
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("accessmode")]
		public Microsoft.Xrm.Sdk.OptionSetValue AccessMode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("accessmode");
			set
			{
				this.OnPropertyChanging("AccessMode");
					this.SetAttributeValue("accessmode", value);
				this.OnPropertyChanged("AccessMode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address1_AddressTypeCode");
					this.SetAttributeValue("address1_addresstypecode", value);
				this.OnPropertyChanged("Address1_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address1_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address1_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address1_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address1_ShippingMethodCode");
					this.SetAttributeValue("address1_shippingmethodcode", value);
				this.OnPropertyChanged("Address1_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_addresstypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_AddressTypeCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_addresstypecode");
			set
			{
				this.OnPropertyChanging("Address2_AddressTypeCode");
					this.SetAttributeValue("address2_addresstypecode", value);
				this.OnPropertyChanged("Address2_AddressTypeCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("address2_shippingmethodcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Address2_ShippingMethodCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("address2_shippingmethodcode");
			set
			{
				this.OnPropertyChanging("Address2_ShippingMethodCode");
					this.SetAttributeValue("address2_shippingmethodcode", value);
				this.OnPropertyChanged("Address2_ShippingMethodCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("caltype")]
		public Microsoft.Xrm.Sdk.OptionSetValue CALType
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("caltype");
			set
			{
				this.OnPropertyChanging("CALType");
					this.SetAttributeValue("caltype", value);
				this.OnPropertyChanged("CALType");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("emailrouteraccessapproval")]
		public Microsoft.Xrm.Sdk.OptionSetValue EmailRouterAccessApproval
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("emailrouteraccessapproval");
			set
			{
				this.OnPropertyChanging("EmailRouterAccessApproval");
					this.SetAttributeValue("emailrouteraccessapproval", value);
				this.OnPropertyChanged("EmailRouterAccessApproval");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("incomingemaildeliverymethod")]
		public Microsoft.Xrm.Sdk.OptionSetValue IncomingEmailDeliveryMethod
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("incomingemaildeliverymethod");
			set
			{
				this.OnPropertyChanging("IncomingEmailDeliveryMethod");
					this.SetAttributeValue("incomingemaildeliverymethod", value);
				this.OnPropertyChanged("IncomingEmailDeliveryMethod");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("invitestatuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue InviteStatusCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("invitestatuscode");
			set
			{
				this.OnPropertyChanging("InviteStatusCode");
					this.SetAttributeValue("invitestatuscode", value);
				this.OnPropertyChanged("InviteStatusCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("outgoingemaildeliverymethod")]
		public Microsoft.Xrm.Sdk.OptionSetValue OutgoingEmailDeliveryMethod
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("outgoingemaildeliverymethod");
			set
			{
				this.OnPropertyChanging("OutgoingEmailDeliveryMethod");
					this.SetAttributeValue("outgoingemaildeliverymethod", value);
				this.OnPropertyChanged("OutgoingEmailDeliveryMethod");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredaddresscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredAddressCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredaddresscode");
			set
			{
				this.OnPropertyChanging("PreferredAddressCode");
					this.SetAttributeValue("preferredaddresscode", value);
				this.OnPropertyChanged("PreferredAddressCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredemailcode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredEmailCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredemailcode");
			set
			{
				this.OnPropertyChanging("PreferredEmailCode");
					this.SetAttributeValue("preferredemailcode", value);
				this.OnPropertyChanged("PreferredEmailCode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalName("preferredphonecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PreferredPhoneCode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("preferredphonecode");
			set
			{
				this.OnPropertyChanging("PreferredPhoneCode");
					this.SetAttributeValue("preferredphonecode", value);
				this.OnPropertyChanged("PreferredPhoneCode");
			}
		}
	}
	public partial class Template
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("componentstate")]
		public Microsoft.Xrm.Sdk.OptionSetValue ComponentState
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("componentstate");
			set
			{
				this.OnPropertyChanging("ComponentState");
					this.SetAttributeValue("componentstate", value);
				this.OnPropertyChanged("ComponentState");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum kipon_datepocState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	public partial class kipon_datepoc
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue statuscode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("statuscode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("statuscode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public kipon_datepocState? statecode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((kipon_datepocState)(System.Enum.ToObject(typeof(kipon_datepocState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("statecode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("statecode");
			}
		}
	}
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Kipon.Solid.Plugin", "1.0.10.21")]
	public enum kipon_numberState
	{
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	public partial class kipon_number
	{
		[Microsoft.Xrm.Sdk.AttributeLogicalName("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue statuscode
		{
			get => this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			set
			{
				this.OnPropertyChanging("statuscode");
					this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("statuscode");
			}
		}
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public kipon_numberState? statecode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((kipon_numberState)(System.Enum.ToObject(typeof(kipon_numberState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("statecode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("statecode");
			}
		}
	}
}
namespace Kipon.Xrm.Extensions.Sdk
{
	public static partial class KiponSdkGeneratedExtensionMethods
	{
		private static System.Collections.Generic.Dictionary<string, int> entityLogicalNameToTypeCodeIndex = new System.Collections.Generic.Dictionary<string, int>();
		private static System.Collections.Generic.Dictionary<int, string> typecodeToEntityLogicalNameIndex = new System.Collections.Generic.Dictionary<int, string>();
		static KiponSdkGeneratedExtensionMethods()
		{
			entittypes[Kipon.Solid.Plugin.Entities.Account.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Account);
			entittypes[Kipon.Solid.Plugin.Entities.Appointment.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Appointment);
			entittypes[Kipon.Solid.Plugin.Entities.Email.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Email);
			entittypes[Kipon.Solid.Plugin.Entities.PhoneCall.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.PhoneCall);
			entittypes[Kipon.Solid.Plugin.Entities.Contact.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Contact);
			entittypes[Kipon.Solid.Plugin.Entities.Invoice.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Invoice);
			entittypes[Kipon.Solid.Plugin.Entities.kipon_multitest.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.kipon_multitest);
			entittypes[Kipon.Solid.Plugin.Entities.kipon_vetest.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.kipon_vetest);
			entittypes[Kipon.Solid.Plugin.Entities.Lead.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Lead);
			entittypes[Kipon.Solid.Plugin.Entities.Opportunity.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Opportunity);
			entittypes[Kipon.Solid.Plugin.Entities.SalesOrder.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.SalesOrder);
			entittypes[Kipon.Solid.Plugin.Entities.Quote.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Quote);
			entittypes[Kipon.Solid.Plugin.Entities.SystemUser.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.SystemUser);
			entittypes[Kipon.Solid.Plugin.Entities.Template.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.Template);
			entittypes[Kipon.Solid.Plugin.Entities.kipon_datepoc.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.kipon_datepoc);
			entittypes[Kipon.Solid.Plugin.Entities.kipon_number.EntityLogicalName] = typeof(Kipon.Solid.Plugin.Entities.kipon_number);
			entityLogicalNameToTypeCodeIndex["entitydataprovider"] = 78;
			typecodeToEntityLogicalNameIndex[78] = "entitydataprovider";
			entityLogicalNameToTypeCodeIndex["opportunitycompetitors"] = 25;
			typecodeToEntityLogicalNameIndex[25] = "opportunitycompetitors";
			entityLogicalNameToTypeCodeIndex["principalobjectaccess"] = 11;
			typecodeToEntityLogicalNameIndex[11] = "principalobjectaccess";
			entityLogicalNameToTypeCodeIndex["topicmodel"] = 9944;
			typecodeToEntityLogicalNameIndex[9944] = "topicmodel";
			entityLogicalNameToTypeCodeIndex["bookableresourcecharacteristic"] = 1148;
			typecodeToEntityLogicalNameIndex[1148] = "bookableresourcecharacteristic";
			entityLogicalNameToTypeCodeIndex["appmoduleroles"] = 9009;
			typecodeToEntityLogicalNameIndex[9009] = "appmoduleroles";
			entityLogicalNameToTypeCodeIndex["mailbox"] = 9606;
			typecodeToEntityLogicalNameIndex[9606] = "mailbox";
			entityLogicalNameToTypeCodeIndex["customerrelationship"] = 4502;
			typecodeToEntityLogicalNameIndex[4502] = "customerrelationship";
			entityLogicalNameToTypeCodeIndex["ribboncommand"] = 1116;
			typecodeToEntityLogicalNameIndex[1116] = "ribboncommand";
			entityLogicalNameToTypeCodeIndex["salesliterature"] = 1038;
			typecodeToEntityLogicalNameIndex[1038] = "salesliterature";
			entityLogicalNameToTypeCodeIndex["convertrule"] = 9300;
			typecodeToEntityLogicalNameIndex[9300] = "convertrule";
			entityLogicalNameToTypeCodeIndex["entityanalyticsconfig"] = 430;
			typecodeToEntityLogicalNameIndex[430] = "entityanalyticsconfig";
			entityLogicalNameToTypeCodeIndex["msdyn_postruleconfig"] = 10002;
			typecodeToEntityLogicalNameIndex[10002] = "msdyn_postruleconfig";
			entityLogicalNameToTypeCodeIndex["usermapping"] = 2016;
			typecodeToEntityLogicalNameIndex[2016] = "usermapping";
			entityLogicalNameToTypeCodeIndex["topicmodelconfiguration"] = 9942;
			typecodeToEntityLogicalNameIndex[9942] = "topicmodelconfiguration";
			entityLogicalNameToTypeCodeIndex["sdkmessagerequestfield"] = 4614;
			typecodeToEntityLogicalNameIndex[4614] = "sdkmessagerequestfield";
			entityLogicalNameToTypeCodeIndex["languageprovisioningstate"] = 9875;
			typecodeToEntityLogicalNameIndex[9875] = "languageprovisioningstate";
			entityLogicalNameToTypeCodeIndex["appmodulemetadatadependency"] = 8701;
			typecodeToEntityLogicalNameIndex[8701] = "appmodulemetadatadependency";
			entityLogicalNameToTypeCodeIndex["documenttemplate"] = 9940;
			typecodeToEntityLogicalNameIndex[9940] = "documenttemplate";
			entityLogicalNameToTypeCodeIndex["msdyn_aibfile"] = 10072;
			typecodeToEntityLogicalNameIndex[10072] = "msdyn_aibfile";
			entityLogicalNameToTypeCodeIndex["territory"] = 2013;
			typecodeToEntityLogicalNameIndex[2013] = "territory";
			entityLogicalNameToTypeCodeIndex["msdyn_knowledgeinteractioninsight"] = 10059;
			typecodeToEntityLogicalNameIndex[10059] = "msdyn_knowledgeinteractioninsight";
			entityLogicalNameToTypeCodeIndex["postrole"] = 8001;
			typecodeToEntityLogicalNameIndex[8001] = "postrole";
			entityLogicalNameToTypeCodeIndex["account"] = 1;
			typecodeToEntityLogicalNameIndex[1] = "account";
			entityLogicalNameToTypeCodeIndex["reportvisibility"] = 9103;
			typecodeToEntityLogicalNameIndex[9103] = "reportvisibility";
			entityLogicalNameToTypeCodeIndex["kipon_number"] = 10121;
			typecodeToEntityLogicalNameIndex[10121] = "kipon_number";
			entityLogicalNameToTypeCodeIndex["connectionroleassociation"] = 3232;
			typecodeToEntityLogicalNameIndex[3232] = "connectionroleassociation";
			entityLogicalNameToTypeCodeIndex["bulkoperation"] = 4406;
			typecodeToEntityLogicalNameIndex[4406] = "bulkoperation";
			entityLogicalNameToTypeCodeIndex["fileattachment"] = 55;
			typecodeToEntityLogicalNameIndex[55] = "fileattachment";
			entityLogicalNameToTypeCodeIndex["virtualresourcegroupresource"] = 10089;
			typecodeToEntityLogicalNameIndex[10089] = "virtualresourcegroupresource";
			entityLogicalNameToTypeCodeIndex["activitypointer"] = 4200;
			typecodeToEntityLogicalNameIndex[4200] = "activitypointer";
			entityLogicalNameToTypeCodeIndex["team"] = 9;
			typecodeToEntityLogicalNameIndex[9] = "team";
			entityLogicalNameToTypeCodeIndex["offlinecommanddefinition"] = 9870;
			typecodeToEntityLogicalNameIndex[9870] = "offlinecommanddefinition";
			entityLogicalNameToTypeCodeIndex["socialinsightsconfiguration"] = 1300;
			typecodeToEntityLogicalNameIndex[1300] = "socialinsightsconfiguration";
			entityLogicalNameToTypeCodeIndex["campaignactivity"] = 4402;
			typecodeToEntityLogicalNameIndex[4402] = "campaignactivity";
			entityLogicalNameToTypeCodeIndex["entity"] = 9800;
			typecodeToEntityLogicalNameIndex[9800] = "entity";
			entityLogicalNameToTypeCodeIndex["stringmap"] = 1043;
			typecodeToEntityLogicalNameIndex[1043] = "stringmap";
			entityLogicalNameToTypeCodeIndex["quotedetail"] = 1085;
			typecodeToEntityLogicalNameIndex[1085] = "quotedetail";
			entityLogicalNameToTypeCodeIndex["fieldpermission"] = 1201;
			typecodeToEntityLogicalNameIndex[1201] = "fieldpermission";
			entityLogicalNameToTypeCodeIndex["attribute"] = 9808;
			typecodeToEntityLogicalNameIndex[9808] = "attribute";
			entityLogicalNameToTypeCodeIndex["teammembership"] = 23;
			typecodeToEntityLogicalNameIndex[23] = "teammembership";
			entityLogicalNameToTypeCodeIndex["customapi"] = 10065;
			typecodeToEntityLogicalNameIndex[10065] = "customapi";
			entityLogicalNameToTypeCodeIndex["flowsession"] = 4720;
			typecodeToEntityLogicalNameIndex[4720] = "flowsession";
			entityLogicalNameToTypeCodeIndex["fieldsecurityprofile"] = 1200;
			typecodeToEntityLogicalNameIndex[1200] = "fieldsecurityprofile";
			entityLogicalNameToTypeCodeIndex["role"] = 1036;
			typecodeToEntityLogicalNameIndex[1036] = "role";
			entityLogicalNameToTypeCodeIndex["connection"] = 3234;
			typecodeToEntityLogicalNameIndex[3234] = "connection";
			entityLogicalNameToTypeCodeIndex["msdyn_flowcardtype"] = 10101;
			typecodeToEntityLogicalNameIndex[10101] = "msdyn_flowcardtype";
			entityLogicalNameToTypeCodeIndex["msdyn_upgradestep"] = 10083;
			typecodeToEntityLogicalNameIndex[10083] = "msdyn_upgradestep";
			entityLogicalNameToTypeCodeIndex["kipon_myactivity"] = 10010;
			typecodeToEntityLogicalNameIndex[10010] = "kipon_myactivity";
			entityLogicalNameToTypeCodeIndex["expanderevent"] = 4711;
			typecodeToEntityLogicalNameIndex[4711] = "expanderevent";
			entityLogicalNameToTypeCodeIndex["cascadegrantrevokeaccessversiontracker"] = 10034;
			typecodeToEntityLogicalNameIndex[10034] = "cascadegrantrevokeaccessversiontracker";
			entityLogicalNameToTypeCodeIndex["salesorderdetail"] = 1089;
			typecodeToEntityLogicalNameIndex[1089] = "salesorderdetail";
			entityLogicalNameToTypeCodeIndex["entitlementtemplate"] = 9702;
			typecodeToEntityLogicalNameIndex[9702] = "entitlementtemplate";
			entityLogicalNameToTypeCodeIndex["availabletimes"] = 10086;
			typecodeToEntityLogicalNameIndex[10086] = "availabletimes";
			entityLogicalNameToTypeCodeIndex["integrationstatus"] = 3000;
			typecodeToEntityLogicalNameIndex[3000] = "integrationstatus";
			entityLogicalNameToTypeCodeIndex["invaliddependency"] = 7107;
			typecodeToEntityLogicalNameIndex[7107] = "invaliddependency";
			entityLogicalNameToTypeCodeIndex["mobileofflineprofileitem"] = 9867;
			typecodeToEntityLogicalNameIndex[9867] = "mobileofflineprofileitem";
			entityLogicalNameToTypeCodeIndex["savedqueryvisualization"] = 1111;
			typecodeToEntityLogicalNameIndex[1111] = "savedqueryvisualization";
			entityLogicalNameToTypeCodeIndex["msdyn_siconfig"] = 10009;
			typecodeToEntityLogicalNameIndex[10009] = "msdyn_siconfig";
			entityLogicalNameToTypeCodeIndex["msdyn_aibfileattacheddata"] = 10073;
			typecodeToEntityLogicalNameIndex[10073] = "msdyn_aibfileattacheddata";
			entityLogicalNameToTypeCodeIndex["ko_line"] = 10015;
			typecodeToEntityLogicalNameIndex[10015] = "ko_line";
			entityLogicalNameToTypeCodeIndex["publisheraddress"] = 7102;
			typecodeToEntityLogicalNameIndex[7102] = "publisheraddress";
			entityLogicalNameToTypeCodeIndex["datalakeworkspace"] = 10030;
			typecodeToEntityLogicalNameIndex[10030] = "datalakeworkspace";
			entityLogicalNameToTypeCodeIndex["msdyn_aiodtrainingimage"] = 10078;
			typecodeToEntityLogicalNameIndex[10078] = "msdyn_aiodtrainingimage";
			entityLogicalNameToTypeCodeIndex["usersettings"] = 150;
			typecodeToEntityLogicalNameIndex[150] = "usersettings";
			entityLogicalNameToTypeCodeIndex["campaignresponse"] = 4401;
			typecodeToEntityLogicalNameIndex[4401] = "campaignresponse";
			entityLogicalNameToTypeCodeIndex["multiselectattributeoptionvalues"] = 9912;
			typecodeToEntityLogicalNameIndex[9912] = "multiselectattributeoptionvalues";
			entityLogicalNameToTypeCodeIndex["kipon_setting"] = 10016;
			typecodeToEntityLogicalNameIndex[10016] = "kipon_setting";
			entityLogicalNameToTypeCodeIndex["kbarticle"] = 127;
			typecodeToEntityLogicalNameIndex[127] = "kbarticle";
			entityLogicalNameToTypeCodeIndex["entityrelationship"] = 9811;
			typecodeToEntityLogicalNameIndex[9811] = "entityrelationship";
			entityLogicalNameToTypeCodeIndex["postlike"] = 8006;
			typecodeToEntityLogicalNameIndex[8006] = "postlike";
			entityLogicalNameToTypeCodeIndex["connectionroleobjecttypecode"] = 3233;
			typecodeToEntityLogicalNameIndex[3233] = "connectionroleobjecttypecode";
			entityLogicalNameToTypeCodeIndex["importdata"] = 4413;
			typecodeToEntityLogicalNameIndex[4413] = "importdata";
			entityLogicalNameToTypeCodeIndex["globalsearchconfiguration"] = 54;
			typecodeToEntityLogicalNameIndex[54] = "globalsearchconfiguration";
			entityLogicalNameToTypeCodeIndex["importlog"] = 4423;
			typecodeToEntityLogicalNameIndex[4423] = "importlog";
			entityLogicalNameToTypeCodeIndex["activitymonitor"] = 10085;
			typecodeToEntityLogicalNameIndex[10085] = "activitymonitor";
			entityLogicalNameToTypeCodeIndex["package_solution"] = 10025;
			typecodeToEntityLogicalNameIndex[10025] = "package_solution";
			entityLogicalNameToTypeCodeIndex["importentitymapping"] = 4428;
			typecodeToEntityLogicalNameIndex[4428] = "importentitymapping";
			entityLogicalNameToTypeCodeIndex["msdyn_postconfig"] = 10001;
			typecodeToEntityLogicalNameIndex[10001] = "msdyn_postconfig";
			entityLogicalNameToTypeCodeIndex["mailboxtrackingfolder"] = 9608;
			typecodeToEntityLogicalNameIndex[9608] = "mailboxtrackingfolder";
			entityLogicalNameToTypeCodeIndex["availabletimesdatasource"] = 10087;
			typecodeToEntityLogicalNameIndex[10087] = "availabletimesdatasource";
			entityLogicalNameToTypeCodeIndex["traceassociation"] = 8051;
			typecodeToEntityLogicalNameIndex[8051] = "traceassociation";
			entityLogicalNameToTypeCodeIndex["picklistmapping"] = 4418;
			typecodeToEntityLogicalNameIndex[4418] = "picklistmapping";
			entityLogicalNameToTypeCodeIndex["roleprivileges"] = 12;
			typecodeToEntityLogicalNameIndex[12] = "roleprivileges";
			entityLogicalNameToTypeCodeIndex["msdyn_aibdataset"] = 10068;
			typecodeToEntityLogicalNameIndex[10068] = "msdyn_aibdataset";
			entityLogicalNameToTypeCodeIndex["msdyn_aiodlabel_msdyn_aiconfiguration"] = 10079;
			typecodeToEntityLogicalNameIndex[10079] = "msdyn_aiodlabel_msdyn_aiconfiguration";
			entityLogicalNameToTypeCodeIndex["service"] = 4001;
			typecodeToEntityLogicalNameIndex[4001] = "service";
			entityLogicalNameToTypeCodeIndex["mobileofflineprofileitemassociation"] = 9868;
			typecodeToEntityLogicalNameIndex[9868] = "mobileofflineprofileitemassociation";
			entityLogicalNameToTypeCodeIndex["ribbonmetadatatoprocess"] = 9880;
			typecodeToEntityLogicalNameIndex[9880] = "ribbonmetadatatoprocess";
			entityLogicalNameToTypeCodeIndex["appmodulemetadata"] = 8700;
			typecodeToEntityLogicalNameIndex[8700] = "appmodulemetadata";
			entityLogicalNameToTypeCodeIndex["ratingvalue"] = 1142;
			typecodeToEntityLogicalNameIndex[1142] = "ratingvalue";
			entityLogicalNameToTypeCodeIndex["plugintype"] = 4602;
			typecodeToEntityLogicalNameIndex[4602] = "plugintype";
			entityLogicalNameToTypeCodeIndex["leadaddress"] = 1017;
			typecodeToEntityLogicalNameIndex[1017] = "leadaddress";
			entityLogicalNameToTypeCodeIndex["ko_header"] = 10014;
			typecodeToEntityLogicalNameIndex[10014] = "ko_header";
			entityLogicalNameToTypeCodeIndex["msdyn_aitemplate"] = 400;
			typecodeToEntityLogicalNameIndex[400] = "msdyn_aitemplate";
			entityLogicalNameToTypeCodeIndex["rollupfield"] = 9604;
			typecodeToEntityLogicalNameIndex[9604] = "rollupfield";
			entityLogicalNameToTypeCodeIndex["importjob"] = 9107;
			typecodeToEntityLogicalNameIndex[9107] = "importjob";
			entityLogicalNameToTypeCodeIndex["fixedmonthlyfiscalcalendar"] = 2004;
			typecodeToEntityLogicalNameIndex[2004] = "fixedmonthlyfiscalcalendar";
			entityLogicalNameToTypeCodeIndex["subscription"] = 29;
			typecodeToEntityLogicalNameIndex[29] = "subscription";
			entityLogicalNameToTypeCodeIndex["entitlementcontacts"] = 7272;
			typecodeToEntityLogicalNameIndex[7272] = "entitlementcontacts";
			entityLogicalNameToTypeCodeIndex["routingruleitem"] = 8199;
			typecodeToEntityLogicalNameIndex[8199] = "routingruleitem";
			entityLogicalNameToTypeCodeIndex["opportunitysalesprocess"] = 953;
			typecodeToEntityLogicalNameIndex[953] = "opportunitysalesprocess";
			entityLogicalNameToTypeCodeIndex["msdyn_databaseversion"] = 10081;
			typecodeToEntityLogicalNameIndex[10081] = "msdyn_databaseversion";
			entityLogicalNameToTypeCodeIndex["invoice"] = 1090;
			typecodeToEntityLogicalNameIndex[1090] = "invoice";
			entityLogicalNameToTypeCodeIndex["unresolvedaddress"] = 2012;
			typecodeToEntityLogicalNameIndex[2012] = "unresolvedaddress";
			entityLogicalNameToTypeCodeIndex["catalog"] = 10062;
			typecodeToEntityLogicalNameIndex[10062] = "catalog";
			entityLogicalNameToTypeCodeIndex["activitymimeattachment"] = 1001;
			typecodeToEntityLogicalNameIndex[1001] = "activitymimeattachment";
			entityLogicalNameToTypeCodeIndex["msdyn_knowledgearticleimage"] = 10058;
			typecodeToEntityLogicalNameIndex[10058] = "msdyn_knowledgearticleimage";
			entityLogicalNameToTypeCodeIndex["topichistory"] = 9946;
			typecodeToEntityLogicalNameIndex[9946] = "topichistory";
			entityLogicalNameToTypeCodeIndex["listmember"] = 4301;
			typecodeToEntityLogicalNameIndex[4301] = "listmember";
			entityLogicalNameToTypeCodeIndex["appmodulemetadataoperationlog"] = 8702;
			typecodeToEntityLogicalNameIndex[8702] = "appmodulemetadataoperationlog";
			entityLogicalNameToTypeCodeIndex["childincidentcount"] = 113;
			typecodeToEntityLogicalNameIndex[113] = "childincidentcount";
			entityLogicalNameToTypeCodeIndex["msdyn_knowledgesearchinsight"] = 10060;
			typecodeToEntityLogicalNameIndex[10060] = "msdyn_knowledgesearchinsight";
			entityLogicalNameToTypeCodeIndex["suggestioncardtemplate"] = 1190;
			typecodeToEntityLogicalNameIndex[1190] = "suggestioncardtemplate";
			entityLogicalNameToTypeCodeIndex["ko_invoicestatus"] = 10117;
			typecodeToEntityLogicalNameIndex[10117] = "ko_invoicestatus";
			entityLogicalNameToTypeCodeIndex["lookupmapping"] = 4419;
			typecodeToEntityLogicalNameIndex[4419] = "lookupmapping";
			entityLogicalNameToTypeCodeIndex["systemusermanagermap"] = 51;
			typecodeToEntityLogicalNameIndex[51] = "systemusermanagermap";
			entityLogicalNameToTypeCodeIndex["solutioncomponentdefinition"] = 7104;
			typecodeToEntityLogicalNameIndex[7104] = "solutioncomponentdefinition";
			entityLogicalNameToTypeCodeIndex["msdyn_postalbum"] = 10000;
			typecodeToEntityLogicalNameIndex[10000] = "msdyn_postalbum";
			entityLogicalNameToTypeCodeIndex["provisionlanguageforuser"] = 10032;
			typecodeToEntityLogicalNameIndex[10032] = "provisionlanguageforuser";
			entityLogicalNameToTypeCodeIndex["msdyn_aibdatasetrecord"] = 10070;
			typecodeToEntityLogicalNameIndex[10070] = "msdyn_aibdatasetrecord";
			entityLogicalNameToTypeCodeIndex["stagesolutionupload"] = 10026;
			typecodeToEntityLogicalNameIndex[10026] = "stagesolutionupload";
			entityLogicalNameToTypeCodeIndex["attributemap"] = 4601;
			typecodeToEntityLogicalNameIndex[4601] = "attributemap";
			entityLogicalNameToTypeCodeIndex["dataperformance"] = 4450;
			typecodeToEntityLogicalNameIndex[4450] = "dataperformance";
			entityLogicalNameToTypeCodeIndex["bookableresourcecategory"] = 1147;
			typecodeToEntityLogicalNameIndex[1147] = "bookableresourcecategory";
			entityLogicalNameToTypeCodeIndex["callbackregistration"] = 301;
			typecodeToEntityLogicalNameIndex[301] = "callbackregistration";
			entityLogicalNameToTypeCodeIndex["accountleads"] = 16;
			typecodeToEntityLogicalNameIndex[16] = "accountleads";
			entityLogicalNameToTypeCodeIndex["kbarticletemplate"] = 1016;
			typecodeToEntityLogicalNameIndex[1016] = "kbarticletemplate";
			entityLogicalNameToTypeCodeIndex["dynamicpropertyinstance"] = 1333;
			typecodeToEntityLogicalNameIndex[1333] = "dynamicpropertyinstance";
			entityLogicalNameToTypeCodeIndex["actioncard"] = 9962;
			typecodeToEntityLogicalNameIndex[9962] = "actioncard";
			entityLogicalNameToTypeCodeIndex["msdynce_botcontent"] = 10046;
			typecodeToEntityLogicalNameIndex[10046] = "msdynce_botcontent";
			entityLogicalNameToTypeCodeIndex["sdkmessageprocessingstepimage"] = 4615;
			typecodeToEntityLogicalNameIndex[4615] = "sdkmessageprocessingstepimage";
			entityLogicalNameToTypeCodeIndex["msdyn_federatedarticle"] = 10055;
			typecodeToEntityLogicalNameIndex[10055] = "msdyn_federatedarticle";
			entityLogicalNameToTypeCodeIndex["syncattributemapping"] = 1401;
			typecodeToEntityLogicalNameIndex[1401] = "syncattributemapping";
			entityLogicalNameToTypeCodeIndex["advancedsimilarityrule"] = 9949;
			typecodeToEntityLogicalNameIndex[9949] = "advancedsimilarityrule";
			entityLogicalNameToTypeCodeIndex["site"] = 4009;
			typecodeToEntityLogicalNameIndex[4009] = "site";
			entityLogicalNameToTypeCodeIndex["bookableresourcecategoryassn"] = 1149;
			typecodeToEntityLogicalNameIndex[1149] = "bookableresourcecategoryassn";
			entityLogicalNameToTypeCodeIndex["canvasappextendedmetadata"] = 10041;
			typecodeToEntityLogicalNameIndex[10041] = "canvasappextendedmetadata";
			entityLogicalNameToTypeCodeIndex["businessunit"] = 10;
			typecodeToEntityLogicalNameIndex[10] = "businessunit";
			entityLogicalNameToTypeCodeIndex["metadatadifference"] = 4231;
			typecodeToEntityLogicalNameIndex[4231] = "metadatadifference";
			entityLogicalNameToTypeCodeIndex["managedproperty"] = 9812;
			typecodeToEntityLogicalNameIndex[9812] = "managedproperty";
			entityLogicalNameToTypeCodeIndex["usersearchfacet"] = 52;
			typecodeToEntityLogicalNameIndex[52] = "usersearchfacet";
			entityLogicalNameToTypeCodeIndex["newprocess"] = 950;
			typecodeToEntityLogicalNameIndex[950] = "newprocess";
			entityLogicalNameToTypeCodeIndex["syncerror"] = 9869;
			typecodeToEntityLogicalNameIndex[9869] = "syncerror";
			entityLogicalNameToTypeCodeIndex["subscriptionstatisticsoutlook"] = 46;
			typecodeToEntityLogicalNameIndex[46] = "subscriptionstatisticsoutlook";
			entityLogicalNameToTypeCodeIndex["competitorproduct"] = 1006;
			typecodeToEntityLogicalNameIndex[1006] = "competitorproduct";
			entityLogicalNameToTypeCodeIndex["msdyn_richtextfile"] = 10054;
			typecodeToEntityLogicalNameIndex[10054] = "msdyn_richtextfile";
			entityLogicalNameToTypeCodeIndex["solutioncomponentattributeconfiguration"] = 10019;
			typecodeToEntityLogicalNameIndex[10019] = "solutioncomponentattributeconfiguration";
			entityLogicalNameToTypeCodeIndex["email"] = 4202;
			typecodeToEntityLogicalNameIndex[4202] = "email";
			entityLogicalNameToTypeCodeIndex["internalcatalogassignment"] = 10064;
			typecodeToEntityLogicalNameIndex[10064] = "internalcatalogassignment";
			entityLogicalNameToTypeCodeIndex["recurringappointmentmaster"] = 4251;
			typecodeToEntityLogicalNameIndex[4251] = "recurringappointmentmaster";
			entityLogicalNameToTypeCodeIndex["msdyn_sikeyvalueconfig"] = 10097;
			typecodeToEntityLogicalNameIndex[10097] = "msdyn_sikeyvalueconfig";
			entityLogicalNameToTypeCodeIndex["userqueryvisualization"] = 1112;
			typecodeToEntityLogicalNameIndex[1112] = "userqueryvisualization";
			entityLogicalNameToTypeCodeIndex["bot_botcomponent"] = 10050;
			typecodeToEntityLogicalNameIndex[10050] = "bot_botcomponent";
			entityLogicalNameToTypeCodeIndex["transformationparametermapping"] = 4427;
			typecodeToEntityLogicalNameIndex[4427] = "transformationparametermapping";
			entityLogicalNameToTypeCodeIndex["msdyn_helppage"] = 10045;
			typecodeToEntityLogicalNameIndex[10045] = "msdyn_helppage";
			entityLogicalNameToTypeCodeIndex["orderclose"] = 4209;
			typecodeToEntityLogicalNameIndex[4209] = "orderclose";
			entityLogicalNameToTypeCodeIndex["partnerapplication"] = 1095;
			typecodeToEntityLogicalNameIndex[1095] = "partnerapplication";
			entityLogicalNameToTypeCodeIndex["duplicaterecord"] = 4415;
			typecodeToEntityLogicalNameIndex[4415] = "duplicaterecord";
			entityLogicalNameToTypeCodeIndex["systemuserprincipals"] = 14;
			typecodeToEntityLogicalNameIndex[14] = "systemuserprincipals";
			entityLogicalNameToTypeCodeIndex["savedorginsightsconfiguration"] = 1309;
			typecodeToEntityLogicalNameIndex[1309] = "savedorginsightsconfiguration";
			entityLogicalNameToTypeCodeIndex["msdyn_upgraderun"] = 10082;
			typecodeToEntityLogicalNameIndex[10082] = "msdyn_upgraderun";
			entityLogicalNameToTypeCodeIndex["subscriptionsyncinfo"] = 33;
			typecodeToEntityLogicalNameIndex[33] = "subscriptionsyncinfo";
			entityLogicalNameToTypeCodeIndex["entitlement"] = 9700;
			typecodeToEntityLogicalNameIndex[9700] = "entitlement";
			entityLogicalNameToTypeCodeIndex["importmap"] = 4411;
			typecodeToEntityLogicalNameIndex[4411] = "importmap";
			entityLogicalNameToTypeCodeIndex["incident"] = 112;
			typecodeToEntityLogicalNameIndex[112] = "incident";
			entityLogicalNameToTypeCodeIndex["msdyn_teamscollaboration"] = 10115;
			typecodeToEntityLogicalNameIndex[10115] = "msdyn_teamscollaboration";
			entityLogicalNameToTypeCodeIndex["customcontrol"] = 9753;
			typecodeToEntityLogicalNameIndex[9753] = "customcontrol";
			entityLogicalNameToTypeCodeIndex["systemuserprofiles"] = 1202;
			typecodeToEntityLogicalNameIndex[1202] = "systemuserprofiles";
			entityLogicalNameToTypeCodeIndex["dynamicproperty"] = 1048;
			typecodeToEntityLogicalNameIndex[1048] = "dynamicproperty";
			entityLogicalNameToTypeCodeIndex["officegraphdocument"] = 9950;
			typecodeToEntityLogicalNameIndex[9950] = "officegraphdocument";
			entityLogicalNameToTypeCodeIndex["sharedobjectsforread"] = 39;
			typecodeToEntityLogicalNameIndex[39] = "sharedobjectsforread";
			entityLogicalNameToTypeCodeIndex["organizationui"] = 1021;
			typecodeToEntityLogicalNameIndex[1021] = "organizationui";
			entityLogicalNameToTypeCodeIndex["officedocument"] = 4490;
			typecodeToEntityLogicalNameIndex[4490] = "officedocument";
			entityLogicalNameToTypeCodeIndex["sla"] = 9750;
			typecodeToEntityLogicalNameIndex[9750] = "sla";
			entityLogicalNameToTypeCodeIndex["emailserverprofile"] = 9605;
			typecodeToEntityLogicalNameIndex[9605] = "emailserverprofile";
			entityLogicalNameToTypeCodeIndex["goalrollupquery"] = 9602;
			typecodeToEntityLogicalNameIndex[9602] = "goalrollupquery";
			entityLogicalNameToTypeCodeIndex["ribbonrule"] = 1117;
			typecodeToEntityLogicalNameIndex[1117] = "ribbonrule";
			entityLogicalNameToTypeCodeIndex["calendarrule"] = 4004;
			typecodeToEntityLogicalNameIndex[4004] = "calendarrule";
			entityLogicalNameToTypeCodeIndex["convertruleitem"] = 9301;
			typecodeToEntityLogicalNameIndex[9301] = "convertruleitem";
			entityLogicalNameToTypeCodeIndex["salesliteratureitem"] = 1070;
			typecodeToEntityLogicalNameIndex[1070] = "salesliteratureitem";
			entityLogicalNameToTypeCodeIndex["settingdefinition"] = 10040;
			typecodeToEntityLogicalNameIndex[10040] = "settingdefinition";
			entityLogicalNameToTypeCodeIndex["bookingstatus"] = 1152;
			typecodeToEntityLogicalNameIndex[1152] = "bookingstatus";
			entityLogicalNameToTypeCodeIndex["msdyn_entityrankingrule"] = 10100;
			typecodeToEntityLogicalNameIndex[10100] = "msdyn_entityrankingrule";
			entityLogicalNameToTypeCodeIndex["postfollow"] = 8003;
			typecodeToEntityLogicalNameIndex[8003] = "postfollow";
			entityLogicalNameToTypeCodeIndex["dynamicpropertyassociation"] = 1235;
			typecodeToEntityLogicalNameIndex[1235] = "dynamicpropertyassociation";
			entityLogicalNameToTypeCodeIndex["orginsightsnotification"] = 9690;
			typecodeToEntityLogicalNameIndex[9690] = "orginsightsnotification";
			entityLogicalNameToTypeCodeIndex["hierarchysecurityconfiguration"] = 9919;
			typecodeToEntityLogicalNameIndex[9919] = "hierarchysecurityconfiguration";
			entityLogicalNameToTypeCodeIndex["similarityrule"] = 9951;
			typecodeToEntityLogicalNameIndex[9951] = "similarityrule";
			entityLogicalNameToTypeCodeIndex["competitoraddress"] = 1004;
			typecodeToEntityLogicalNameIndex[1004] = "competitoraddress";
			entityLogicalNameToTypeCodeIndex["azureserviceconnection"] = 9936;
			typecodeToEntityLogicalNameIndex[9936] = "azureserviceconnection";
			entityLogicalNameToTypeCodeIndex["transactioncurrency"] = 9105;
			typecodeToEntityLogicalNameIndex[9105] = "transactioncurrency";
			entityLogicalNameToTypeCodeIndex["campaignactivityitem"] = 4404;
			typecodeToEntityLogicalNameIndex[4404] = "campaignactivityitem";
			entityLogicalNameToTypeCodeIndex["ribbondiff"] = 1130;
			typecodeToEntityLogicalNameIndex[1130] = "ribbondiff";
			entityLogicalNameToTypeCodeIndex["knowledgearticleincident"] = 9954;
			typecodeToEntityLogicalNameIndex[9954] = "knowledgearticleincident";
			entityLogicalNameToTypeCodeIndex["channelaccessprofileentityaccesslevel"] = 9404;
			typecodeToEntityLogicalNameIndex[9404] = "channelaccessprofileentityaccesslevel";
			entityLogicalNameToTypeCodeIndex["campaignitem"] = 4403;
			typecodeToEntityLogicalNameIndex[4403] = "campaignitem";
			entityLogicalNameToTypeCodeIndex["topic"] = 9948;
			typecodeToEntityLogicalNameIndex[9948] = "topic";
			entityLogicalNameToTypeCodeIndex["listoperation"] = 10080;
			typecodeToEntityLogicalNameIndex[10080] = "listoperation";
			entityLogicalNameToTypeCodeIndex["solution"] = 7100;
			typecodeToEntityLogicalNameIndex[7100] = "solution";
			entityLogicalNameToTypeCodeIndex["exportsolutionupload"] = 10027;
			typecodeToEntityLogicalNameIndex[10027] = "exportsolutionupload";
			entityLogicalNameToTypeCodeIndex["competitorsalesliterature"] = 26;
			typecodeToEntityLogicalNameIndex[26] = "competitorsalesliterature";
			entityLogicalNameToTypeCodeIndex["postcomment"] = 8005;
			typecodeToEntityLogicalNameIndex[8005] = "postcomment";
			entityLogicalNameToTypeCodeIndex["sitemap"] = 4709;
			typecodeToEntityLogicalNameIndex[4709] = "sitemap";
			entityLogicalNameToTypeCodeIndex["msdyn_suggestedcontactsdatasource"] = 10109;
			typecodeToEntityLogicalNameIndex[10109] = "msdyn_suggestedcontactsdatasource";
			entityLogicalNameToTypeCodeIndex["report"] = 9100;
			typecodeToEntityLogicalNameIndex[9100] = "report";
			entityLogicalNameToTypeCodeIndex["msdyn_callablecontext"] = 10090;
			typecodeToEntityLogicalNameIndex[10090] = "msdyn_callablecontext";
			entityLogicalNameToTypeCodeIndex["customeraddress"] = 1071;
			typecodeToEntityLogicalNameIndex[1071] = "customeraddress";
			entityLogicalNameToTypeCodeIndex["msdyn_odatav4ds"] = 10005;
			typecodeToEntityLogicalNameIndex[10005] = "msdyn_odatav4ds";
			entityLogicalNameToTypeCodeIndex["customeropportunityrole"] = 4503;
			typecodeToEntityLogicalNameIndex[4503] = "customeropportunityrole";
			entityLogicalNameToTypeCodeIndex["resource"] = 4002;
			typecodeToEntityLogicalNameIndex[4002] = "resource";
			entityLogicalNameToTypeCodeIndex["pdfsetting"] = 10053;
			typecodeToEntityLogicalNameIndex[10053] = "pdfsetting";
			entityLogicalNameToTypeCodeIndex["sdkmessagepair"] = 4613;
			typecodeToEntityLogicalNameIndex[4613] = "sdkmessagepair";
			entityLogicalNameToTypeCodeIndex["leadproduct"] = 27;
			typecodeToEntityLogicalNameIndex[27] = "leadproduct";
			entityLogicalNameToTypeCodeIndex["contractdetail"] = 1011;
			typecodeToEntityLogicalNameIndex[1011] = "contractdetail";
			entityLogicalNameToTypeCodeIndex["msdyn_tour"] = 10118;
			typecodeToEntityLogicalNameIndex[10118] = "msdyn_tour";
			entityLogicalNameToTypeCodeIndex["list"] = 4300;
			typecodeToEntityLogicalNameIndex[4300] = "list";
			entityLogicalNameToTypeCodeIndex["msdyn_wallsavedqueryusersettings"] = 10004;
			typecodeToEntityLogicalNameIndex[10004] = "msdyn_wallsavedqueryusersettings";
			entityLogicalNameToTypeCodeIndex["recurrencerule"] = 4250;
			typecodeToEntityLogicalNameIndex[4250] = "recurrencerule";
			entityLogicalNameToTypeCodeIndex["environmentvariablevalue"] = 381;
			typecodeToEntityLogicalNameIndex[381] = "environmentvariablevalue";
			entityLogicalNameToTypeCodeIndex["sdkmessageresponsefield"] = 4611;
			typecodeToEntityLogicalNameIndex[4611] = "sdkmessageresponsefield";
			entityLogicalNameToTypeCodeIndex["productassociation"] = 1025;
			typecodeToEntityLogicalNameIndex[1025] = "productassociation";
			entityLogicalNameToTypeCodeIndex["savedquery"] = 1039;
			typecodeToEntityLogicalNameIndex[1039] = "savedquery";
			entityLogicalNameToTypeCodeIndex["uom"] = 1055;
			typecodeToEntityLogicalNameIndex[1055] = "uom";
			entityLogicalNameToTypeCodeIndex["msdyn_suggestedactivitydatasource"] = 10107;
			typecodeToEntityLogicalNameIndex[10107] = "msdyn_suggestedactivitydatasource";
			entityLogicalNameToTypeCodeIndex["duplicaterulecondition"] = 4416;
			typecodeToEntityLogicalNameIndex[4416] = "duplicaterulecondition";
			entityLogicalNameToTypeCodeIndex["conversationtranscript"] = 10047;
			typecodeToEntityLogicalNameIndex[10047] = "conversationtranscript";
			entityLogicalNameToTypeCodeIndex["channelaccessprofilerule"] = 9400;
			typecodeToEntityLogicalNameIndex[9400] = "channelaccessprofilerule";
			entityLogicalNameToTypeCodeIndex["appconfig"] = 9012;
			typecodeToEntityLogicalNameIndex[9012] = "appconfig";
			entityLogicalNameToTypeCodeIndex["untrackedemail"] = 4220;
			typecodeToEntityLogicalNameIndex[4220] = "untrackedemail";
			entityLogicalNameToTypeCodeIndex["queuemembership"] = 1213;
			typecodeToEntityLogicalNameIndex[1213] = "queuemembership";
			entityLogicalNameToTypeCodeIndex["processsession"] = 4710;
			typecodeToEntityLogicalNameIndex[4710] = "processsession";
			entityLogicalNameToTypeCodeIndex["msdyn_notesanalysisconfig"] = 10110;
			typecodeToEntityLogicalNameIndex[10110] = "msdyn_notesanalysisconfig";
			entityLogicalNameToTypeCodeIndex["orginsightsmetric"] = 9699;
			typecodeToEntityLogicalNameIndex[9699] = "orginsightsmetric";
			entityLogicalNameToTypeCodeIndex["goal"] = 9600;
			typecodeToEntityLogicalNameIndex[9600] = "goal";
			entityLogicalNameToTypeCodeIndex["constraintbasedgroup"] = 4007;
			typecodeToEntityLogicalNameIndex[4007] = "constraintbasedgroup";
			entityLogicalNameToTypeCodeIndex["incidentresolution"] = 4206;
			typecodeToEntityLogicalNameIndex[4206] = "incidentresolution";
			entityLogicalNameToTypeCodeIndex["ratingmodel"] = 1144;
			typecodeToEntityLogicalNameIndex[1144] = "ratingmodel";
			entityLogicalNameToTypeCodeIndex["connector"] = 372;
			typecodeToEntityLogicalNameIndex[372] = "connector";
			entityLogicalNameToTypeCodeIndex["asyncoperation"] = 4700;
			typecodeToEntityLogicalNameIndex[4700] = "asyncoperation";
			entityLogicalNameToTypeCodeIndex["principalentitymap"] = 41;
			typecodeToEntityLogicalNameIndex[41] = "principalentitymap";
			entityLogicalNameToTypeCodeIndex["knowledgesearchmodel"] = 9947;
			typecodeToEntityLogicalNameIndex[9947] = "knowledgesearchmodel";
			entityLogicalNameToTypeCodeIndex["equipment"] = 4000;
			typecodeToEntityLogicalNameIndex[4000] = "equipment";
			entityLogicalNameToTypeCodeIndex["webresource"] = 9333;
			typecodeToEntityLogicalNameIndex[9333] = "webresource";
			entityLogicalNameToTypeCodeIndex["msdyn_aiodtrainingboundingbox"] = 10077;
			typecodeToEntityLogicalNameIndex[10077] = "msdyn_aiodtrainingboundingbox";
			entityLogicalNameToTypeCodeIndex["activityparty"] = 135;
			typecodeToEntityLogicalNameIndex[135] = "activityparty";
			entityLogicalNameToTypeCodeIndex["principalsyncattributemap"] = 1404;
			typecodeToEntityLogicalNameIndex[1404] = "principalsyncattributemap";
			entityLogicalNameToTypeCodeIndex["wizardaccessprivilege"] = 4803;
			typecodeToEntityLogicalNameIndex[4803] = "wizardaccessprivilege";
			entityLogicalNameToTypeCodeIndex["msdyn_aiodlabel"] = 10076;
			typecodeToEntityLogicalNameIndex[10076] = "msdyn_aiodlabel";
			entityLogicalNameToTypeCodeIndex["sharepointdocument"] = 9507;
			typecodeToEntityLogicalNameIndex[9507] = "sharepointdocument";
			entityLogicalNameToTypeCodeIndex["mailboxstatistics"] = 9607;
			typecodeToEntityLogicalNameIndex[9607] = "mailboxstatistics";
			entityLogicalNameToTypeCodeIndex["msdyn_kmfederatedsearchconfig"] = 10057;
			typecodeToEntityLogicalNameIndex[10057] = "msdyn_kmfederatedsearchconfig";
			entityLogicalNameToTypeCodeIndex["principalobjectaccessreadsnapshot"] = 90;
			typecodeToEntityLogicalNameIndex[90] = "principalobjectaccessreadsnapshot";
			entityLogicalNameToTypeCodeIndex["msdyn_aimodel"] = 401;
			typecodeToEntityLogicalNameIndex[401] = "msdyn_aimodel";
			entityLogicalNameToTypeCodeIndex["emailsearch"] = 4299;
			typecodeToEntityLogicalNameIndex[4299] = "emailsearch";
			entityLogicalNameToTypeCodeIndex["metric"] = 9603;
			typecodeToEntityLogicalNameIndex[9603] = "metric";
			entityLogicalNameToTypeCodeIndex["customcontrolresource"] = 9754;
			typecodeToEntityLogicalNameIndex[9754] = "customcontrolresource";
			entityLogicalNameToTypeCodeIndex["fax"] = 4204;
			typecodeToEntityLogicalNameIndex[4204] = "fax";
			entityLogicalNameToTypeCodeIndex["kipon_vetest"] = 10013;
			typecodeToEntityLogicalNameIndex[10013] = "kipon_vetest";
			entityLogicalNameToTypeCodeIndex["msdyn_msteamssetting"] = 10113;
			typecodeToEntityLogicalNameIndex[10113] = "msdyn_msteamssetting";
			entityLogicalNameToTypeCodeIndex["displaystringmap"] = 4101;
			typecodeToEntityLogicalNameIndex[4101] = "displaystringmap";
			entityLogicalNameToTypeCodeIndex["optionset"] = 9809;
			typecodeToEntityLogicalNameIndex[9809] = "optionset";
			entityLogicalNameToTypeCodeIndex["bot"] = 10048;
			typecodeToEntityLogicalNameIndex[10048] = "bot";
			entityLogicalNameToTypeCodeIndex["subscriptionsyncentryoffline"] = 47;
			typecodeToEntityLogicalNameIndex[47] = "subscriptionsyncentryoffline";
			entityLogicalNameToTypeCodeIndex["serviceendpoint"] = 4618;
			typecodeToEntityLogicalNameIndex[4618] = "serviceendpoint";
			entityLogicalNameToTypeCodeIndex["position"] = 50;
			typecodeToEntityLogicalNameIndex[50] = "position";
			entityLogicalNameToTypeCodeIndex["channelaccessprofile"] = 3005;
			typecodeToEntityLogicalNameIndex[3005] = "channelaccessprofile";
			entityLogicalNameToTypeCodeIndex["knowledgearticleviews"] = 9955;
			typecodeToEntityLogicalNameIndex[9955] = "knowledgearticleviews";
			entityLogicalNameToTypeCodeIndex["businessunitmap"] = 6;
			typecodeToEntityLogicalNameIndex[6] = "businessunitmap";
			entityLogicalNameToTypeCodeIndex["opportunityclose"] = 4208;
			typecodeToEntityLogicalNameIndex[4208] = "opportunityclose";
			entityLogicalNameToTypeCodeIndex["msdyn_actioncardrolesetting"] = 10099;
			typecodeToEntityLogicalNameIndex[10099] = "msdyn_actioncardrolesetting";
			entityLogicalNameToTypeCodeIndex["appconfiginstance"] = 9013;
			typecodeToEntityLogicalNameIndex[9013] = "appconfiginstance";
			entityLogicalNameToTypeCodeIndex["msdyn_aiodimage"] = 10075;
			typecodeToEntityLogicalNameIndex[10075] = "msdyn_aiodimage";
			entityLogicalNameToTypeCodeIndex["sdkmessagerequest"] = 4609;
			typecodeToEntityLogicalNameIndex[4609] = "sdkmessagerequest";
			entityLogicalNameToTypeCodeIndex["dependencyfeature"] = 7108;
			typecodeToEntityLogicalNameIndex[7108] = "dependencyfeature";
			entityLogicalNameToTypeCodeIndex["audit"] = 4567;
			typecodeToEntityLogicalNameIndex[4567] = "audit";
			entityLogicalNameToTypeCodeIndex["msdyn_federatedarticleincident"] = 10056;
			typecodeToEntityLogicalNameIndex[10056] = "msdyn_federatedarticleincident";
			entityLogicalNameToTypeCodeIndex["systemform"] = 1030;
			typecodeToEntityLogicalNameIndex[1030] = "systemform";
			entityLogicalNameToTypeCodeIndex["msdyn_aiconfiguration"] = 402;
			typecodeToEntityLogicalNameIndex[402] = "msdyn_aiconfiguration";
			entityLogicalNameToTypeCodeIndex["msdyn_aibdatasetscontainer"] = 10071;
			typecodeToEntityLogicalNameIndex[10071] = "msdyn_aibdatasetscontainer";
			entityLogicalNameToTypeCodeIndex["attachment"] = 1002;
			typecodeToEntityLogicalNameIndex[1002] = "attachment";
			entityLogicalNameToTypeCodeIndex["bookableresourcegroup"] = 1151;
			typecodeToEntityLogicalNameIndex[1151] = "bookableresourcegroup";
			entityLogicalNameToTypeCodeIndex["template"] = 2010;
			typecodeToEntityLogicalNameIndex[2010] = "template";
			entityLogicalNameToTypeCodeIndex["serviceappointment"] = 4214;
			typecodeToEntityLogicalNameIndex[4214] = "serviceappointment";
			entityLogicalNameToTypeCodeIndex["salesprocessinstance"] = 32;
			typecodeToEntityLogicalNameIndex[32] = "salesprocessinstance";
			entityLogicalNameToTypeCodeIndex["localconfigstore"] = 9201;
			typecodeToEntityLogicalNameIndex[9201] = "localconfigstore";
			entityLogicalNameToTypeCodeIndex["theme"] = 2015;
			typecodeToEntityLogicalNameIndex[2015] = "theme";
			entityLogicalNameToTypeCodeIndex["rollupproperties"] = 9510;
			typecodeToEntityLogicalNameIndex[9510] = "rollupproperties";
			entityLogicalNameToTypeCodeIndex["workflowlog"] = 4706;
			typecodeToEntityLogicalNameIndex[4706] = "workflowlog";
			entityLogicalNameToTypeCodeIndex["organization"] = 1019;
			typecodeToEntityLogicalNameIndex[1019] = "organization";
			entityLogicalNameToTypeCodeIndex["bookableresource"] = 1150;
			typecodeToEntityLogicalNameIndex[1150] = "bookableresource";
			entityLogicalNameToTypeCodeIndex["solutioncomponentconfiguration"] = 10020;
			typecodeToEntityLogicalNameIndex[10020] = "solutioncomponentconfiguration";
			entityLogicalNameToTypeCodeIndex["multientitysearchentities"] = 9911;
			typecodeToEntityLogicalNameIndex[9911] = "multientitysearchentities";
			entityLogicalNameToTypeCodeIndex["msdyn_playbookinstance"] = 10094;
			typecodeToEntityLogicalNameIndex[10094] = "msdyn_playbookinstance";
			entityLogicalNameToTypeCodeIndex["msdyn_solutionhistory"] = 10017;
			typecodeToEntityLogicalNameIndex[10017] = "msdyn_solutionhistory";
			entityLogicalNameToTypeCodeIndex["letter"] = 4207;
			typecodeToEntityLogicalNameIndex[4207] = "letter";
			entityLogicalNameToTypeCodeIndex["pluginassembly"] = 4605;
			typecodeToEntityLogicalNameIndex[4605] = "pluginassembly";
			entityLogicalNameToTypeCodeIndex["aciviewmapper"] = 8040;
			typecodeToEntityLogicalNameIndex[8040] = "aciviewmapper";
			entityLogicalNameToTypeCodeIndex["businessunitnewsarticle"] = 132;
			typecodeToEntityLogicalNameIndex[132] = "businessunitnewsarticle";
			entityLogicalNameToTypeCodeIndex["rollupjob"] = 9511;
			typecodeToEntityLogicalNameIndex[9511] = "rollupjob";
			entityLogicalNameToTypeCodeIndex["knowledgearticle"] = 9953;
			typecodeToEntityLogicalNameIndex[9953] = "knowledgearticle";
			entityLogicalNameToTypeCodeIndex["appmodule"] = 9006;
			typecodeToEntityLogicalNameIndex[9006] = "appmodule";
			entityLogicalNameToTypeCodeIndex["resourcegroupdatasource"] = 10088;
			typecodeToEntityLogicalNameIndex[10088] = "resourcegroupdatasource";
			entityLogicalNameToTypeCodeIndex["interprocesslock"] = 4011;
			typecodeToEntityLogicalNameIndex[4011] = "interprocesslock";
			entityLogicalNameToTypeCodeIndex["contactinvoices"] = 17;
			typecodeToEntityLogicalNameIndex[17] = "contactinvoices";
			entityLogicalNameToTypeCodeIndex["leadtoopportunitysalesprocess"] = 954;
			typecodeToEntityLogicalNameIndex[954] = "leadtoopportunitysalesprocess";
			entityLogicalNameToTypeCodeIndex["characteristic"] = 1141;
			typecodeToEntityLogicalNameIndex[1141] = "characteristic";
			entityLogicalNameToTypeCodeIndex["calendar"] = 4003;
			typecodeToEntityLogicalNameIndex[4003] = "calendar";
			entityLogicalNameToTypeCodeIndex["msdyn_untrackedappointment"] = 10105;
			typecodeToEntityLogicalNameIndex[10105] = "msdyn_untrackedappointment";
			entityLogicalNameToTypeCodeIndex["userapplicationmetadata"] = 7001;
			typecodeToEntityLogicalNameIndex[7001] = "userapplicationmetadata";
			entityLogicalNameToTypeCodeIndex["sdkmessage"] = 4606;
			typecodeToEntityLogicalNameIndex[4606] = "sdkmessage";
			entityLogicalNameToTypeCodeIndex["statusmap"] = 1075;
			typecodeToEntityLogicalNameIndex[1075] = "statusmap";
			entityLogicalNameToTypeCodeIndex["bulkoperationlog"] = 4405;
			typecodeToEntityLogicalNameIndex[4405] = "bulkoperationlog";
			entityLogicalNameToTypeCodeIndex["lead"] = 4;
			typecodeToEntityLogicalNameIndex[4] = "lead";
			entityLogicalNameToTypeCodeIndex["connectionreference"] = 10044;
			typecodeToEntityLogicalNameIndex[10044] = "connectionreference";
			entityLogicalNameToTypeCodeIndex["reportentity"] = 9101;
			typecodeToEntityLogicalNameIndex[9101] = "reportentity";
			entityLogicalNameToTypeCodeIndex["contact"] = 2;
			typecodeToEntityLogicalNameIndex[2] = "contact";
			entityLogicalNameToTypeCodeIndex["msdyn_suggestedactivity"] = 10106;
			typecodeToEntityLogicalNameIndex[10106] = "msdyn_suggestedactivity";
			entityLogicalNameToTypeCodeIndex["campaign"] = 4400;
			typecodeToEntityLogicalNameIndex[4400] = "campaign";
			entityLogicalNameToTypeCodeIndex["queue"] = 2020;
			typecodeToEntityLogicalNameIndex[2020] = "queue";
			entityLogicalNameToTypeCodeIndex["replicationbacklog"] = 1140;
			typecodeToEntityLogicalNameIndex[1140] = "replicationbacklog";
			entityLogicalNameToTypeCodeIndex["quarterlyfiscalcalendar"] = 2002;
			typecodeToEntityLogicalNameIndex[2002] = "quarterlyfiscalcalendar";
			entityLogicalNameToTypeCodeIndex["expiredprocess"] = 955;
			typecodeToEntityLogicalNameIndex[955] = "expiredprocess";
			entityLogicalNameToTypeCodeIndex["teamtemplate"] = 92;
			typecodeToEntityLogicalNameIndex[92] = "teamtemplate";
			entityLogicalNameToTypeCodeIndex["entitlemententityallocationtypemapping"] = 9704;
			typecodeToEntityLogicalNameIndex[9704] = "entitlemententityallocationtypemapping";
			entityLogicalNameToTypeCodeIndex["ribbontabtocommandmap"] = 1113;
			typecodeToEntityLogicalNameIndex[1113] = "ribbontabtocommandmap";
			entityLogicalNameToTypeCodeIndex["applicationfile"] = 4707;
			typecodeToEntityLogicalNameIndex[4707] = "applicationfile";
			entityLogicalNameToTypeCodeIndex["contactleads"] = 22;
			typecodeToEntityLogicalNameIndex[22] = "contactleads";
			entityLogicalNameToTypeCodeIndex["appmodulecomponentedge"] = 10037;
			typecodeToEntityLogicalNameIndex[10037] = "appmodulecomponentedge";
			entityLogicalNameToTypeCodeIndex["appmodulecomponentnode"] = 10038;
			typecodeToEntityLogicalNameIndex[10038] = "appmodulecomponentnode";
			entityLogicalNameToTypeCodeIndex["botcomponent_workflow"] = 10052;
			typecodeToEntityLogicalNameIndex[10052] = "botcomponent_workflow";
			entityLogicalNameToTypeCodeIndex["filtertemplate"] = 30;
			typecodeToEntityLogicalNameIndex[30] = "filtertemplate";
			entityLogicalNameToTypeCodeIndex["sdkmessagefilter"] = 4607;
			typecodeToEntityLogicalNameIndex[4607] = "sdkmessagefilter";
			entityLogicalNameToTypeCodeIndex["displaystring"] = 4102;
			typecodeToEntityLogicalNameIndex[4102] = "displaystring";
			entityLogicalNameToTypeCodeIndex["userform"] = 1031;
			typecodeToEntityLogicalNameIndex[1031] = "userform";
			entityLogicalNameToTypeCodeIndex["msdyn_knowledgearticletemplate"] = 10061;
			typecodeToEntityLogicalNameIndex[10061] = "msdyn_knowledgearticletemplate";
			entityLogicalNameToTypeCodeIndex["interactionforemail"] = 9986;
			typecodeToEntityLogicalNameIndex[9986] = "interactionforemail";
			entityLogicalNameToTypeCodeIndex["privilegeobjecttypecodes"] = 31;
			typecodeToEntityLogicalNameIndex[31] = "privilegeobjecttypecodes";
			entityLogicalNameToTypeCodeIndex["product"] = 1024;
			typecodeToEntityLogicalNameIndex[1024] = "product";
			entityLogicalNameToTypeCodeIndex["annualfiscalcalendar"] = 2000;
			typecodeToEntityLogicalNameIndex[2000] = "annualfiscalcalendar";
			entityLogicalNameToTypeCodeIndex["relationshiprolemap"] = 4501;
			typecodeToEntityLogicalNameIndex[4501] = "relationshiprolemap";
			entityLogicalNameToTypeCodeIndex["resourcegroup"] = 4005;
			typecodeToEntityLogicalNameIndex[4005] = "resourcegroup";
			entityLogicalNameToTypeCodeIndex["bulkdeletefailure"] = 4425;
			typecodeToEntityLogicalNameIndex[4425] = "bulkdeletefailure";
			entityLogicalNameToTypeCodeIndex["attributeimageconfig"] = 431;
			typecodeToEntityLogicalNameIndex[431] = "attributeimageconfig";
			entityLogicalNameToTypeCodeIndex["msdyn_callablecontext_msdyn_playbooktemplate"] = 10096;
			typecodeToEntityLogicalNameIndex[10096] = "msdyn_callablecontext_msdyn_playbooktemplate";
			entityLogicalNameToTypeCodeIndex["ownermapping"] = 4420;
			typecodeToEntityLogicalNameIndex[4420] = "ownermapping";
			entityLogicalNameToTypeCodeIndex["actioncardusersettings"] = 9973;
			typecodeToEntityLogicalNameIndex[9973] = "actioncardusersettings";
			entityLogicalNameToTypeCodeIndex["solutioncomponentrelationshipconfiguration"] = 10021;
			typecodeToEntityLogicalNameIndex[10021] = "solutioncomponentrelationshipconfiguration";
			entityLogicalNameToTypeCodeIndex["translationprocess"] = 951;
			typecodeToEntityLogicalNameIndex[951] = "translationprocess";
			entityLogicalNameToTypeCodeIndex["adminsettingsentity"] = 10011;
			typecodeToEntityLogicalNameIndex[10011] = "adminsettingsentity";
			entityLogicalNameToTypeCodeIndex["appmodulecomponent"] = 9007;
			typecodeToEntityLogicalNameIndex[9007] = "appmodulecomponent";
			entityLogicalNameToTypeCodeIndex["datalakeworkspacepermission"] = 10031;
			typecodeToEntityLogicalNameIndex[10031] = "datalakeworkspacepermission";
			entityLogicalNameToTypeCodeIndex["principalobjectattributeaccess"] = 44;
			typecodeToEntityLogicalNameIndex[44] = "principalobjectattributeaccess";
			entityLogicalNameToTypeCodeIndex["teamroles"] = 40;
			typecodeToEntityLogicalNameIndex[40] = "teamroles";
			entityLogicalNameToTypeCodeIndex["dynamicpropertyoptionsetitem"] = 1049;
			typecodeToEntityLogicalNameIndex[1049] = "dynamicpropertyoptionsetitem";
			entityLogicalNameToTypeCodeIndex["msdyn_icebreakersconfig"] = 10111;
			typecodeToEntityLogicalNameIndex[10111] = "msdyn_icebreakersconfig";
			entityLogicalNameToTypeCodeIndex["subscriptionsyncentryoutlook"] = 48;
			typecodeToEntityLogicalNameIndex[48] = "subscriptionsyncentryoutlook";
			entityLogicalNameToTypeCodeIndex["systemuserlicenses"] = 13;
			typecodeToEntityLogicalNameIndex[13] = "systemuserlicenses";
			entityLogicalNameToTypeCodeIndex["cardtype"] = 9983;
			typecodeToEntityLogicalNameIndex[9983] = "cardtype";
			entityLogicalNameToTypeCodeIndex["botcomponent"] = 10049;
			typecodeToEntityLogicalNameIndex[10049] = "botcomponent";
			entityLogicalNameToTypeCodeIndex["task"] = 4212;
			typecodeToEntityLogicalNameIndex[4212] = "task";
			entityLogicalNameToTypeCodeIndex["ribboncontextgroup"] = 1115;
			typecodeToEntityLogicalNameIndex[1115] = "ribboncontextgroup";
			entityLogicalNameToTypeCodeIndex["systemuserroles"] = 15;
			typecodeToEntityLogicalNameIndex[15] = "systemuserroles";
			entityLogicalNameToTypeCodeIndex["msdyn_playbooktemplate"] = 10095;
			typecodeToEntityLogicalNameIndex[10095] = "msdyn_playbooktemplate";
			entityLogicalNameToTypeCodeIndex["semiannualfiscalcalendar"] = 2001;
			typecodeToEntityLogicalNameIndex[2001] = "semiannualfiscalcalendar";
			entityLogicalNameToTypeCodeIndex["systemuserbusinessunitentitymap"] = 42;
			typecodeToEntityLogicalNameIndex[42] = "systemuserbusinessunitentitymap";
			entityLogicalNameToTypeCodeIndex["importfile"] = 4412;
			typecodeToEntityLogicalNameIndex[4412] = "importfile";
			entityLogicalNameToTypeCodeIndex["solutionhistorydata"] = 9890;
			typecodeToEntityLogicalNameIndex[9890] = "solutionhistorydata";
			entityLogicalNameToTypeCodeIndex["workflow"] = 4703;
			typecodeToEntityLogicalNameIndex[4703] = "workflow";
			entityLogicalNameToTypeCodeIndex["kipon_vtprovider"] = 10012;
			typecodeToEntityLogicalNameIndex[10012] = "kipon_vtprovider";
			entityLogicalNameToTypeCodeIndex["roletemplateprivileges"] = 28;
			typecodeToEntityLogicalNameIndex[28] = "roletemplateprivileges";
			entityLogicalNameToTypeCodeIndex["businessdatalocalizedlabel"] = 4232;
			typecodeToEntityLogicalNameIndex[4232] = "businessdatalocalizedlabel";
			entityLogicalNameToTypeCodeIndex["workflowbinary"] = 10043;
			typecodeToEntityLogicalNameIndex[10043] = "workflowbinary";
			entityLogicalNameToTypeCodeIndex["systemusersyncmappingprofiles"] = 1402;
			typecodeToEntityLogicalNameIndex[1402] = "systemusersyncmappingprofiles";
			entityLogicalNameToTypeCodeIndex["appconfigmaster"] = 9011;
			typecodeToEntityLogicalNameIndex[9011] = "appconfigmaster";
			entityLogicalNameToTypeCodeIndex["postregarding"] = 8002;
			typecodeToEntityLogicalNameIndex[8002] = "postregarding";
			entityLogicalNameToTypeCodeIndex["msdyn_autocapturerule"] = 10103;
			typecodeToEntityLogicalNameIndex[10103] = "msdyn_autocapturerule";
			entityLogicalNameToTypeCodeIndex["principalattributeaccessmap"] = 43;
			typecodeToEntityLogicalNameIndex[43] = "principalattributeaccessmap";
			entityLogicalNameToTypeCodeIndex["notification"] = 4110;
			typecodeToEntityLogicalNameIndex[4110] = "notification";
			entityLogicalNameToTypeCodeIndex["mailboxtrackingcategory"] = 9609;
			typecodeToEntityLogicalNameIndex[9609] = "mailboxtrackingcategory";
			entityLogicalNameToTypeCodeIndex["msdyn_solutionhistorydatasource"] = 10018;
			typecodeToEntityLogicalNameIndex[10018] = "msdyn_solutionhistorydatasource";
			entityLogicalNameToTypeCodeIndex["serviceplanappmodules"] = 10035;
			typecodeToEntityLogicalNameIndex[10035] = "serviceplanappmodules";
			entityLogicalNameToTypeCodeIndex["topicmodelexecutionhistory"] = 9943;
			typecodeToEntityLogicalNameIndex[9943] = "topicmodelexecutionhistory";
			entityLogicalNameToTypeCodeIndex["reportcategory"] = 9102;
			typecodeToEntityLogicalNameIndex[9102] = "reportcategory";
			entityLogicalNameToTypeCodeIndex["entitydatasource"] = 85;
			typecodeToEntityLogicalNameIndex[85] = "entitydatasource";
			entityLogicalNameToTypeCodeIndex["sdkmessageprocessingstepsecureconfig"] = 4616;
			typecodeToEntityLogicalNameIndex[4616] = "sdkmessageprocessingstepsecureconfig";
			entityLogicalNameToTypeCodeIndex["catalogassignment"] = 10063;
			typecodeToEntityLogicalNameIndex[10063] = "catalogassignment";
			entityLogicalNameToTypeCodeIndex["msdyn_playbookactivityattribute"] = 10092;
			typecodeToEntityLogicalNameIndex[10092] = "msdyn_playbookactivityattribute";
			entityLogicalNameToTypeCodeIndex["owner"] = 7;
			typecodeToEntityLogicalNameIndex[7] = "owner";
			entityLogicalNameToTypeCodeIndex["traceregarding"] = 8052;
			typecodeToEntityLogicalNameIndex[8052] = "traceregarding";
			entityLogicalNameToTypeCodeIndex["kbarticlecomment"] = 1082;
			typecodeToEntityLogicalNameIndex[1082] = "kbarticlecomment";
			entityLogicalNameToTypeCodeIndex["canvasapp"] = 300;
			typecodeToEntityLogicalNameIndex[300] = "canvasapp";
			entityLogicalNameToTypeCodeIndex["resourcegroupexpansion"] = 4010;
			typecodeToEntityLogicalNameIndex[4010] = "resourcegroupexpansion";
			entityLogicalNameToTypeCodeIndex["datalakefolderpermission"] = 10029;
			typecodeToEntityLogicalNameIndex[10029] = "datalakefolderpermission";
			entityLogicalNameToTypeCodeIndex["channelaccessprofileruleitem"] = 9401;
			typecodeToEntityLogicalNameIndex[9401] = "channelaccessprofileruleitem";
			entityLogicalNameToTypeCodeIndex["columnmapping"] = 4417;
			typecodeToEntityLogicalNameIndex[4417] = "columnmapping";
			entityLogicalNameToTypeCodeIndex["exchangesyncidmapping"] = 4120;
			typecodeToEntityLogicalNameIndex[4120] = "exchangesyncidmapping";
			entityLogicalNameToTypeCodeIndex["subscriptiontrackingdeletedobject"] = 35;
			typecodeToEntityLogicalNameIndex[35] = "subscriptiontrackingdeletedobject";
			entityLogicalNameToTypeCodeIndex["incidentknowledgebaserecord"] = 9931;
			typecodeToEntityLogicalNameIndex[9931] = "incidentknowledgebaserecord";
			entityLogicalNameToTypeCodeIndex["navigationsetting"] = 9900;
			typecodeToEntityLogicalNameIndex[9900] = "navigationsetting";
			entityLogicalNameToTypeCodeIndex["entitlementproducts"] = 6363;
			typecodeToEntityLogicalNameIndex[6363] = "entitlementproducts";
			entityLogicalNameToTypeCodeIndex["userquery"] = 4230;
			typecodeToEntityLogicalNameIndex[4230] = "userquery";
			entityLogicalNameToTypeCodeIndex["pricelevel"] = 1022;
			typecodeToEntityLogicalNameIndex[1022] = "pricelevel";
			entityLogicalNameToTypeCodeIndex["package"] = 10024;
			typecodeToEntityLogicalNameIndex[10024] = "package";
			entityLogicalNameToTypeCodeIndex["msdyn_componentlayerdatasource"] = 10023;
			typecodeToEntityLogicalNameIndex[10023] = "msdyn_componentlayerdatasource";
			entityLogicalNameToTypeCodeIndex["botcomponent_botcomponent"] = 10051;
			typecodeToEntityLogicalNameIndex[10051] = "botcomponent_botcomponent";
			entityLogicalNameToTypeCodeIndex["transformationmapping"] = 4426;
			typecodeToEntityLogicalNameIndex[4426] = "transformationmapping";
			entityLogicalNameToTypeCodeIndex["customapirequestparameter"] = 10066;
			typecodeToEntityLogicalNameIndex[10066] = "customapirequestparameter";
			entityLogicalNameToTypeCodeIndex["teamprofiles"] = 1203;
			typecodeToEntityLogicalNameIndex[1203] = "teamprofiles";
			entityLogicalNameToTypeCodeIndex["routingrule"] = 8181;
			typecodeToEntityLogicalNameIndex[8181] = "routingrule";
			entityLogicalNameToTypeCodeIndex["actioncarduserstate"] = 9968;
			typecodeToEntityLogicalNameIndex[9968] = "actioncarduserstate";
			entityLogicalNameToTypeCodeIndex["sdkmessageresponse"] = 4610;
			typecodeToEntityLogicalNameIndex[4610] = "sdkmessageresponse";
			entityLogicalNameToTypeCodeIndex["import"] = 4410;
			typecodeToEntityLogicalNameIndex[4410] = "import";
			entityLogicalNameToTypeCodeIndex["monthlyfiscalcalendar"] = 2003;
			typecodeToEntityLogicalNameIndex[2003] = "monthlyfiscalcalendar";
			entityLogicalNameToTypeCodeIndex["kipon_datepoc"] = 10116;
			typecodeToEntityLogicalNameIndex[10116] = "kipon_datepoc";
			entityLogicalNameToTypeCodeIndex["externalpartyitem"] = 9987;
			typecodeToEntityLogicalNameIndex[9987] = "externalpartyitem";
			entityLogicalNameToTypeCodeIndex["dependencynode"] = 7106;
			typecodeToEntityLogicalNameIndex[7106] = "dependencynode";
			entityLogicalNameToTypeCodeIndex["sharepointdata"] = 9509;
			typecodeToEntityLogicalNameIndex[9509] = "sharepointdata";
			entityLogicalNameToTypeCodeIndex["environmentvariabledefinition"] = 380;
			typecodeToEntityLogicalNameIndex[380] = "environmentvariabledefinition";
			entityLogicalNameToTypeCodeIndex["emailhash"] = 4023;
			typecodeToEntityLogicalNameIndex[4023] = "emailhash";
			entityLogicalNameToTypeCodeIndex["runtimedependency"] = 7200;
			typecodeToEntityLogicalNameIndex[7200] = "runtimedependency";
			entityLogicalNameToTypeCodeIndex["uomschedule"] = 1056;
			typecodeToEntityLogicalNameIndex[1056] = "uomschedule";
			entityLogicalNameToTypeCodeIndex["hierarchyrule"] = 8840;
			typecodeToEntityLogicalNameIndex[8840] = "hierarchyrule";
			entityLogicalNameToTypeCodeIndex["userfiscalcalendar"] = 1086;
			typecodeToEntityLogicalNameIndex[1086] = "userfiscalcalendar";
			entityLogicalNameToTypeCodeIndex["slakpiinstance"] = 9752;
			typecodeToEntityLogicalNameIndex[9752] = "slakpiinstance";
			entityLogicalNameToTypeCodeIndex["category"] = 9959;
			typecodeToEntityLogicalNameIndex[9959] = "category";
			entityLogicalNameToTypeCodeIndex["recordcountsnapshot"] = 91;
			typecodeToEntityLogicalNameIndex[91] = "recordcountsnapshot";
			entityLogicalNameToTypeCodeIndex["appointment"] = 4201;
			typecodeToEntityLogicalNameIndex[4201] = "appointment";
			entityLogicalNameToTypeCodeIndex["msdyn_aibdatasetfile"] = 10069;
			typecodeToEntityLogicalNameIndex[10069] = "msdyn_aibdatasetfile";
			entityLogicalNameToTypeCodeIndex["multientitysearch"] = 9910;
			typecodeToEntityLogicalNameIndex[9910] = "multientitysearch";
			entityLogicalNameToTypeCodeIndex["holidaywrapper"] = 9996;
			typecodeToEntityLogicalNameIndex[9996] = "holidaywrapper";
			entityLogicalNameToTypeCodeIndex["emailsignature"] = 9997;
			typecodeToEntityLogicalNameIndex[9997] = "emailsignature";
			entityLogicalNameToTypeCodeIndex["connectionrole"] = 3231;
			typecodeToEntityLogicalNameIndex[3231] = "connectionrole";
			entityLogicalNameToTypeCodeIndex["quote"] = 1084;
			typecodeToEntityLogicalNameIndex[1084] = "quote";
			entityLogicalNameToTypeCodeIndex["msdyn_collabgraphresource"] = 10112;
			typecodeToEntityLogicalNameIndex[10112] = "msdyn_collabgraphresource";
			entityLogicalNameToTypeCodeIndex["annotation"] = 5;
			typecodeToEntityLogicalNameIndex[5] = "annotation";
			entityLogicalNameToTypeCodeIndex["externalparty"] = 3008;
			typecodeToEntityLogicalNameIndex[3008] = "externalparty";
			entityLogicalNameToTypeCodeIndex["channelproperty"] = 1236;
			typecodeToEntityLogicalNameIndex[1236] = "channelproperty";
			entityLogicalNameToTypeCodeIndex["entitlementchannel"] = 9701;
			typecodeToEntityLogicalNameIndex[9701] = "entitlementchannel";
			entityLogicalNameToTypeCodeIndex["delveactionhub"] = 9961;
			typecodeToEntityLogicalNameIndex[9961] = "delveactionhub";
			entityLogicalNameToTypeCodeIndex["post"] = 8000;
			typecodeToEntityLogicalNameIndex[8000] = "post";
			entityLogicalNameToTypeCodeIndex["queueitem"] = 2029;
			typecodeToEntityLogicalNameIndex[2029] = "queueitem";
			entityLogicalNameToTypeCodeIndex["sqlencryptionaudit"] = 9613;
			typecodeToEntityLogicalNameIndex[9613] = "sqlencryptionaudit";
			entityLogicalNameToTypeCodeIndex["systemuser"] = 8;
			typecodeToEntityLogicalNameIndex[8] = "systemuser";
			entityLogicalNameToTypeCodeIndex["competitor"] = 123;
			typecodeToEntityLogicalNameIndex[123] = "competitor";
			entityLogicalNameToTypeCodeIndex["bookableresourcebookingheader"] = 1146;
			typecodeToEntityLogicalNameIndex[1146] = "bookableresourcebookingheader";
			entityLogicalNameToTypeCodeIndex["userentityinstancedata"] = 2501;
			typecodeToEntityLogicalNameIndex[2501] = "userentityinstancedata";
			entityLogicalNameToTypeCodeIndex["opportunity"] = 3;
			typecodeToEntityLogicalNameIndex[3] = "opportunity";
			entityLogicalNameToTypeCodeIndex["socialactivity"] = 4216;
			typecodeToEntityLogicalNameIndex[4216] = "socialactivity";
			entityLogicalNameToTypeCodeIndex["entitykey"] = 9810;
			typecodeToEntityLogicalNameIndex[9810] = "entitykey";
			entityLogicalNameToTypeCodeIndex["msdyn_wallsavedquery"] = 10003;
			typecodeToEntityLogicalNameIndex[10003] = "msdyn_wallsavedquery";
			entityLogicalNameToTypeCodeIndex["relationshipattribute"] = 9814;
			typecodeToEntityLogicalNameIndex[9814] = "relationshipattribute";
			entityLogicalNameToTypeCodeIndex["queueitemcount"] = 2023;
			typecodeToEntityLogicalNameIndex[2023] = "queueitemcount";
			entityLogicalNameToTypeCodeIndex["syncattributemappingprofile"] = 1400;
			typecodeToEntityLogicalNameIndex[1400] = "syncattributemappingprofile";
			entityLogicalNameToTypeCodeIndex["knowledgebaserecord"] = 9930;
			typecodeToEntityLogicalNameIndex[9930] = "knowledgebaserecord";
			entityLogicalNameToTypeCodeIndex["msdyn_actioncardregarding"] = 10098;
			typecodeToEntityLogicalNameIndex[10098] = "msdyn_actioncardregarding";
			entityLogicalNameToTypeCodeIndex["businessprocessflowinstance"] = 4725;
			typecodeToEntityLogicalNameIndex[4725] = "businessprocessflowinstance";
			entityLogicalNameToTypeCodeIndex["timezonelocalizedname"] = 4812;
			typecodeToEntityLogicalNameIndex[4812] = "timezonelocalizedname";
			entityLogicalNameToTypeCodeIndex["queuemembercount"] = 2024;
			typecodeToEntityLogicalNameIndex[2024] = "queuemembercount";
			entityLogicalNameToTypeCodeIndex["processstageparameter"] = 10042;
			typecodeToEntityLogicalNameIndex[10042] = "processstageparameter";
			entityLogicalNameToTypeCodeIndex["textanalyticsentitymapping"] = 9945;
			typecodeToEntityLogicalNameIndex[9945] = "textanalyticsentitymapping";
			entityLogicalNameToTypeCodeIndex["timestampdatemapping"] = 9932;
			typecodeToEntityLogicalNameIndex[9932] = "timestampdatemapping";
			entityLogicalNameToTypeCodeIndex["entitlementtemplatechannel"] = 9703;
			typecodeToEntityLogicalNameIndex[9703] = "entitlementtemplatechannel";
			entityLogicalNameToTypeCodeIndex["sharepointdocumentlocation"] = 9508;
			typecodeToEntityLogicalNameIndex[9508] = "sharepointdocumentlocation";
			entityLogicalNameToTypeCodeIndex["timezonerule"] = 4811;
			typecodeToEntityLogicalNameIndex[4811] = "timezonerule";
			entityLogicalNameToTypeCodeIndex["productsubstitute"] = 1028;
			typecodeToEntityLogicalNameIndex[1028] = "productsubstitute";
			entityLogicalNameToTypeCodeIndex["processtrigger"] = 4712;
			typecodeToEntityLogicalNameIndex[4712] = "processtrigger";
			entityLogicalNameToTypeCodeIndex["msdyn_playbookcategory"] = 10093;
			typecodeToEntityLogicalNameIndex[10093] = "msdyn_playbookcategory";
			entityLogicalNameToTypeCodeIndex["imagedescriptor"] = 1007;
			typecodeToEntityLogicalNameIndex[1007] = "imagedescriptor";
			entityLogicalNameToTypeCodeIndex["bookableresourcebooking"] = 1145;
			typecodeToEntityLogicalNameIndex[1145] = "bookableresourcebooking";
			entityLogicalNameToTypeCodeIndex["contracttemplate"] = 2011;
			typecodeToEntityLogicalNameIndex[2011] = "contracttemplate";
			entityLogicalNameToTypeCodeIndex["cascadegrantrevokeaccessrecordstracker"] = 10033;
			typecodeToEntityLogicalNameIndex[10033] = "cascadegrantrevokeaccessrecordstracker";
			entityLogicalNameToTypeCodeIndex["relationship"] = 9813;
			typecodeToEntityLogicalNameIndex[9813] = "relationship";
			entityLogicalNameToTypeCodeIndex["plugintracelog"] = 4619;
			typecodeToEntityLogicalNameIndex[4619] = "plugintracelog";
			entityLogicalNameToTypeCodeIndex["marketingformdisplayattributes"] = 10119;
			typecodeToEntityLogicalNameIndex[10119] = "marketingformdisplayattributes";
			entityLogicalNameToTypeCodeIndex["wizardpage"] = 4802;
			typecodeToEntityLogicalNameIndex[4802] = "wizardpage";
			entityLogicalNameToTypeCodeIndex["msdyn_componentlayer"] = 10022;
			typecodeToEntityLogicalNameIndex[10022] = "msdyn_componentlayer";
			entityLogicalNameToTypeCodeIndex["organizationstatistic"] = 4708;
			typecodeToEntityLogicalNameIndex[4708] = "organizationstatistic";
			entityLogicalNameToTypeCodeIndex["personaldocumenttemplate"] = 9941;
			typecodeToEntityLogicalNameIndex[9941] = "personaldocumenttemplate";
			entityLogicalNameToTypeCodeIndex["sharepointsite"] = 9502;
			typecodeToEntityLogicalNameIndex[9502] = "sharepointsite";
			entityLogicalNameToTypeCodeIndex["slaitem"] = 9751;
			typecodeToEntityLogicalNameIndex[9751] = "slaitem";
			entityLogicalNameToTypeCodeIndex["relationshiprole"] = 4500;
			typecodeToEntityLogicalNameIndex[4500] = "relationshiprole";
			entityLogicalNameToTypeCodeIndex["plugintypestatistic"] = 4603;
			typecodeToEntityLogicalNameIndex[4603] = "plugintypestatistic";
			entityLogicalNameToTypeCodeIndex["msdyn_upgradeversion"] = 10084;
			typecodeToEntityLogicalNameIndex[10084] = "msdyn_upgradeversion";
			entityLogicalNameToTypeCodeIndex["solutioncomponent"] = 7103;
			typecodeToEntityLogicalNameIndex[7103] = "solutioncomponent";
			entityLogicalNameToTypeCodeIndex["workflowdependency"] = 4704;
			typecodeToEntityLogicalNameIndex[4704] = "workflowdependency";
			entityLogicalNameToTypeCodeIndex["sdkmessageprocessingstep"] = 4608;
			typecodeToEntityLogicalNameIndex[4608] = "sdkmessageprocessingstep";
			entityLogicalNameToTypeCodeIndex["isvconfig"] = 4705;
			typecodeToEntityLogicalNameIndex[4705] = "isvconfig";
			entityLogicalNameToTypeCodeIndex["userentityuisettings"] = 2500;
			typecodeToEntityLogicalNameIndex[2500] = "userentityuisettings";
			entityLogicalNameToTypeCodeIndex["salesorder"] = 1088;
			typecodeToEntityLogicalNameIndex[1088] = "salesorder";
			entityLogicalNameToTypeCodeIndex["bulkdeleteoperation"] = 4424;
			typecodeToEntityLogicalNameIndex[4424] = "bulkdeleteoperation";
			entityLogicalNameToTypeCodeIndex["publisher"] = 7101;
			typecodeToEntityLogicalNameIndex[7101] = "publisher";
			entityLogicalNameToTypeCodeIndex["customapiresponseproperty"] = 10067;
			typecodeToEntityLogicalNameIndex[10067] = "customapiresponseproperty";
			entityLogicalNameToTypeCodeIndex["subscriptionmanuallytrackedobject"] = 37;
			typecodeToEntityLogicalNameIndex[37] = "subscriptionmanuallytrackedobject";
			entityLogicalNameToTypeCodeIndex["discounttype"] = 1080;
			typecodeToEntityLogicalNameIndex[1080] = "discounttype";
			entityLogicalNameToTypeCodeIndex["opportunityproduct"] = 1083;
			typecodeToEntityLogicalNameIndex[1083] = "opportunityproduct";
			entityLogicalNameToTypeCodeIndex["kipon_multitest"] = 10120;
			typecodeToEntityLogicalNameIndex[10120] = "kipon_multitest";
			entityLogicalNameToTypeCodeIndex["ribbonclientmetadata"] = 4579;
			typecodeToEntityLogicalNameIndex[4579] = "ribbonclientmetadata";
			entityLogicalNameToTypeCodeIndex["commitment"] = 4215;
			typecodeToEntityLogicalNameIndex[4215] = "commitment";
			entityLogicalNameToTypeCodeIndex["contactquotes"] = 18;
			typecodeToEntityLogicalNameIndex[18] = "contactquotes";
			entityLogicalNameToTypeCodeIndex["productpricelevel"] = 1026;
			typecodeToEntityLogicalNameIndex[1026] = "productpricelevel";
			entityLogicalNameToTypeCodeIndex["msdyn_msteamssettingsv2"] = 10114;
			typecodeToEntityLogicalNameIndex[10114] = "msdyn_msteamssettingsv2";
			entityLogicalNameToTypeCodeIndex["license"] = 2027;
			typecodeToEntityLogicalNameIndex[2027] = "license";
			entityLogicalNameToTypeCodeIndex["discount"] = 1013;
			typecodeToEntityLogicalNameIndex[1013] = "discount";
			entityLogicalNameToTypeCodeIndex["entitlementtemplateproducts"] = 4545;
			typecodeToEntityLogicalNameIndex[4545] = "entitlementtemplateproducts";
			entityLogicalNameToTypeCodeIndex["documentindex"] = 126;
			typecodeToEntityLogicalNameIndex[126] = "documentindex";
			entityLogicalNameToTypeCodeIndex["customcontroldefaultconfig"] = 9755;
			typecodeToEntityLogicalNameIndex[9755] = "customcontroldefaultconfig";
			entityLogicalNameToTypeCodeIndex["webwizard"] = 4800;
			typecodeToEntityLogicalNameIndex[4800] = "webwizard";
			entityLogicalNameToTypeCodeIndex["msdyn_playbookactivity"] = 10091;
			typecodeToEntityLogicalNameIndex[10091] = "msdyn_playbookactivity";
			entityLogicalNameToTypeCodeIndex["mailmergetemplate"] = 9106;
			typecodeToEntityLogicalNameIndex[9106] = "mailmergetemplate";
			entityLogicalNameToTypeCodeIndex["mobileofflineprofile"] = 9866;
			typecodeToEntityLogicalNameIndex[9866] = "mobileofflineprofile";
			entityLogicalNameToTypeCodeIndex["msdyn_salesinsightssettings"] = 10102;
			typecodeToEntityLogicalNameIndex[10102] = "msdyn_salesinsightssettings";
			entityLogicalNameToTypeCodeIndex["feedback"] = 9958;
			typecodeToEntityLogicalNameIndex[9958] = "feedback";
			entityLogicalNameToTypeCodeIndex["msdyn_solutioncomponentsummary"] = 10006;
			typecodeToEntityLogicalNameIndex[10006] = "msdyn_solutioncomponentsummary";
			entityLogicalNameToTypeCodeIndex["msdyn_relationshipinsightsunifiedconfig"] = 10008;
			typecodeToEntityLogicalNameIndex[10008] = "msdyn_relationshipinsightsunifiedconfig";
			entityLogicalNameToTypeCodeIndex["datalakefolder"] = 10028;
			typecodeToEntityLogicalNameIndex[10028] = "datalakefolder";
			entityLogicalNameToTypeCodeIndex["internaladdress"] = 1003;
			typecodeToEntityLogicalNameIndex[1003] = "internaladdress";
			entityLogicalNameToTypeCodeIndex["socialprofile"] = 99;
			typecodeToEntityLogicalNameIndex[99] = "socialprofile";
			entityLogicalNameToTypeCodeIndex["resourcespec"] = 4006;
			typecodeToEntityLogicalNameIndex[4006] = "resourcespec";
			entityLogicalNameToTypeCodeIndex["appsetting"] = 10039;
			typecodeToEntityLogicalNameIndex[10039] = "appsetting";
			entityLogicalNameToTypeCodeIndex["tracelog"] = 8050;
			typecodeToEntityLogicalNameIndex[8050] = "tracelog";
			entityLogicalNameToTypeCodeIndex["teamsyncattributemappingprofiles"] = 1403;
			typecodeToEntityLogicalNameIndex[1403] = "teamsyncattributemappingprofiles";
			entityLogicalNameToTypeCodeIndex["roletemplate"] = 1037;
			typecodeToEntityLogicalNameIndex[1037] = "roletemplate";
			entityLogicalNameToTypeCodeIndex["msdyn_suggestedcontact"] = 10108;
			typecodeToEntityLogicalNameIndex[10108] = "msdyn_suggestedcontact";
			entityLogicalNameToTypeCodeIndex["timezonedefinition"] = 4810;
			typecodeToEntityLogicalNameIndex[4810] = "timezonedefinition";
			entityLogicalNameToTypeCodeIndex["invoicedetail"] = 1091;
			typecodeToEntityLogicalNameIndex[1091] = "invoicedetail";
			entityLogicalNameToTypeCodeIndex["subject"] = 129;
			typecodeToEntityLogicalNameIndex[129] = "subject";
			entityLogicalNameToTypeCodeIndex["authorizationserver"] = 1094;
			typecodeToEntityLogicalNameIndex[1094] = "authorizationserver";
			entityLogicalNameToTypeCodeIndex["duplicaterule"] = 4414;
			typecodeToEntityLogicalNameIndex[4414] = "duplicaterule";
			entityLogicalNameToTypeCodeIndex["subscriptionclients"] = 1072;
			typecodeToEntityLogicalNameIndex[1072] = "subscriptionclients";
			entityLogicalNameToTypeCodeIndex["bookableresourcebookingexchangesyncidmapping"] = 4421;
			typecodeToEntityLogicalNameIndex[4421] = "bookableresourcebookingexchangesyncidmapping";
			entityLogicalNameToTypeCodeIndex["dependency"] = 7105;
			typecodeToEntityLogicalNameIndex[7105] = "dependency";
			entityLogicalNameToTypeCodeIndex["privilege"] = 1023;
			typecodeToEntityLogicalNameIndex[1023] = "privilege";
			entityLogicalNameToTypeCodeIndex["complexcontrol"] = 9650;
			typecodeToEntityLogicalNameIndex[9650] = "complexcontrol";
			entityLogicalNameToTypeCodeIndex["reportlink"] = 9104;
			typecodeToEntityLogicalNameIndex[9104] = "reportlink";
			entityLogicalNameToTypeCodeIndex["systemapplicationmetadata"] = 7000;
			typecodeToEntityLogicalNameIndex[7000] = "systemapplicationmetadata";
			entityLogicalNameToTypeCodeIndex["processstage"] = 4724;
			typecodeToEntityLogicalNameIndex[4724] = "processstage";
			entityLogicalNameToTypeCodeIndex["workflowwaitsubscription"] = 4702;
			typecodeToEntityLogicalNameIndex[4702] = "workflowwaitsubscription";
			entityLogicalNameToTypeCodeIndex["serviceplan"] = 101;
			typecodeToEntityLogicalNameIndex[101] = "serviceplan";
			entityLogicalNameToTypeCodeIndex["contactorders"] = 19;
			typecodeToEntityLogicalNameIndex[19] = "contactorders";
			entityLogicalNameToTypeCodeIndex["entitymap"] = 4600;
			typecodeToEntityLogicalNameIndex[4600] = "entitymap";
			entityLogicalNameToTypeCodeIndex["msdyn_autocapturesettings"] = 10104;
			typecodeToEntityLogicalNameIndex[10104] = "msdyn_autocapturesettings";
			entityLogicalNameToTypeCodeIndex["entityimageconfig"] = 432;
			typecodeToEntityLogicalNameIndex[432] = "entityimageconfig";
			entityLogicalNameToTypeCodeIndex["ribboncustomization"] = 1120;
			typecodeToEntityLogicalNameIndex[1120] = "ribboncustomization";
			entityLogicalNameToTypeCodeIndex["appelement"] = 10036;
			typecodeToEntityLogicalNameIndex[10036] = "appelement";
			entityLogicalNameToTypeCodeIndex["clientupdate"] = 36;
			typecodeToEntityLogicalNameIndex[36] = "clientupdate";
			entityLogicalNameToTypeCodeIndex["quoteclose"] = 4211;
			typecodeToEntityLogicalNameIndex[4211] = "quoteclose";
			entityLogicalNameToTypeCodeIndex["leadcompetitors"] = 24;
			typecodeToEntityLogicalNameIndex[24] = "leadcompetitors";
			entityLogicalNameToTypeCodeIndex["knowledgearticlescategories"] = 9960;
			typecodeToEntityLogicalNameIndex[9960] = "knowledgearticlescategories";
			entityLogicalNameToTypeCodeIndex["subscriptionstatisticsoffline"] = 45;
			typecodeToEntityLogicalNameIndex[45] = "subscriptionstatisticsoffline";
			entityLogicalNameToTypeCodeIndex["recommendeddocument"] = 1189;
			typecodeToEntityLogicalNameIndex[1189] = "recommendeddocument";
			entityLogicalNameToTypeCodeIndex["msdyn_solutioncomponentdatasource"] = 10007;
			typecodeToEntityLogicalNameIndex[10007] = "msdyn_solutioncomponentdatasource";
			entityLogicalNameToTypeCodeIndex["msdyn_aifptrainingdocument"] = 10074;
			typecodeToEntityLogicalNameIndex[10074] = "msdyn_aifptrainingdocument";
			entityLogicalNameToTypeCodeIndex["phonetocaseprocess"] = 952;
			typecodeToEntityLogicalNameIndex[952] = "phonetocaseprocess";
			entityLogicalNameToTypeCodeIndex["phonecall"] = 4210;
			typecodeToEntityLogicalNameIndex[4210] = "phonecall";
			entityLogicalNameToTypeCodeIndex["contract"] = 1010;
			typecodeToEntityLogicalNameIndex[1010] = "contract";
			entityLogicalNameToTypeCodeIndex["channelpropertygroup"] = 1234;
			typecodeToEntityLogicalNameIndex[1234] = "channelpropertygroup";
			entityLogicalNameToTypeCodeIndex["productsalesliterature"] = 21;
			typecodeToEntityLogicalNameIndex[21] = "productsalesliterature";
			entityLogicalNameToTypeCodeIndex["servicecontractcontacts"] = 20;
			typecodeToEntityLogicalNameIndex[20] = "servicecontractcontacts";
			entityLogicalNameToTypeCodeIndex["languagelocale"] = 9957;
			typecodeToEntityLogicalNameIndex[9957] = "languagelocale";
		}
			public static int ToEntityTypeCode(this string value) { return entityLogicalNameToTypeCodeIndex[value]; }
			public static string ToEntityLogicalName(this int value) { return typecodeToEntityLogicalNameIndex[value]; }
	}
	public partial class NamingService
	{
		static NamingService()
		{
			Add("entitydataprovider","entitydataproviderid","name");
			Add("opportunitycompetitors","opportunitycompetitorid","name");
			Add("topicmodel","topicmodelid","name");
			Add("bookableresourcecharacteristic","bookableresourcecharacteristicid","name");
			Add("mailbox","mailboxid","name");
			Add("customerrelationship","customerrelationshipid","customerroleidname");
			Add("salesliterature","salesliteratureid","name");
			Add("convertrule","convertruleid","name");
			Add("entityanalyticsconfig","entityanalyticsconfigid","parententitylogicalname");
			Add("msdyn_postruleconfig","msdyn_postruleconfigid","msdyn_name");
			Add("topicmodelconfiguration","topicmodelconfigurationid","name");
			Add("documenttemplate","documenttemplateid","name");
			Add("msdyn_aibfile","msdyn_aibfileid","msdyn_name");
			Add("territory","territoryid","name");
			Add("msdyn_knowledgeinteractioninsight","msdyn_knowledgeinteractioninsightid","msdyn_interactiontype");
			Add("account","accountid","name");
			Add("kipon_number","kipon_numberid","kipon_name");
			Add("bulkoperation","activityid","subject");
			Add("fileattachment","fileattachmentid","filename");
			Add("virtualresourcegroupresource","virtualresourcegroupresourceid","name");
			Add("activitypointer","activityid","subject");
			Add("team","teamid","name");
			Add("offlinecommanddefinition","commanddefinitionid","commandname");
			Add("campaignactivity","activityid","subject");
			Add("entity","entityid","name");
			Add("quotedetail","quotedetailid","quotedetailname");
			Add("attribute","attributeid","name");
			Add("customapi","customapiid","name");
			Add("flowsession","flowsessionid","name");
			Add("fieldsecurityprofile","fieldsecurityprofileid","name");
			Add("role","roleid","name");
			Add("connection","connectionid","name");
			Add("msdyn_flowcardtype","msdyn_flowcardtypeid","msdyn_name");
			Add("msdyn_upgradestep","msdyn_upgradestepid","msdyn_name");
			Add("kipon_myactivity","activityid","subject");
			Add("expanderevent","expandereventid","name");
			Add("cascadegrantrevokeaccessversiontracker","cascadegrantrevokeaccessversiontrackerid","name");
			Add("salesorderdetail","salesorderdetailid","salesorderdetailname");
			Add("entitlementtemplate","entitlementtemplateid","name");
			Add("availabletimes","availabletimesid","name");
			Add("mobileofflineprofileitem","mobileofflineprofileitemid","name");
			Add("savedqueryvisualization","savedqueryvisualizationid","name");
			Add("msdyn_siconfig","msdyn_siconfigid","msdyn_version");
			Add("msdyn_aibfileattacheddata","msdyn_aibfileattacheddataid","msdyn_key");
			Add("ko_line","ko_lineid","ko_name");
			Add("publisheraddress","publisheraddressid","name");
			Add("datalakeworkspace","datalakeworkspaceid","name");
			Add("msdyn_aiodtrainingimage","msdyn_aiodtrainingimageid","msdyn_name");
			Add("campaignresponse","activityid","subject");
			Add("kipon_setting","kipon_settingid","kipon_environment");
			Add("kbarticle","kbarticleid","title");
			Add("entityrelationship","entityrelationshipid","schemaname");
			Add("importdata","importdataid","data");
			Add("activitymonitor","activitymonitorid","name");
			Add("msdyn_postconfig","msdyn_postconfigid","msdyn_entitydisplayname");
			Add("availabletimesdatasource","availabletimesdatasourceid","name");
			Add("msdyn_aibdataset","msdyn_aibdatasetid","msdyn_name");
			Add("service","serviceid","name");
			Add("mobileofflineprofileitemassociation","mobileofflineprofileitemassociationid","name");
			Add("ratingvalue","ratingvalueid","name");
			Add("plugintype","plugintypeid","name");
			Add("leadaddress","leadaddressid","name");
			Add("ko_header","ko_headerid","ko_name");
			Add("msdyn_aitemplate","msdyn_aitemplateid","msdyn_uniquename");
			Add("entitlementcontacts","entitlementcontactid","name");
			Add("routingruleitem","routingruleitemid","name");
			Add("opportunitysalesprocess","businessprocessflowinstanceid","name");
			Add("msdyn_databaseversion","msdyn_databaseversionid","msdyn_solutionname");
			Add("invoice","invoiceid","name");
			Add("catalog","catalogid","name");
			Add("activitymimeattachment","activitymimeattachmentid","filename");
			Add("msdyn_knowledgearticleimage","msdyn_knowledgearticleimageid","msdyn_filename");
			Add("topichistory","topichistoryid","name");
			Add("listmember","listmemberid","name");
			Add("childincidentcount","childincidentcountid","name");
			Add("msdyn_knowledgesearchinsight","msdyn_knowledgesearchinsightid","msdyn_searchterm");
			Add("suggestioncardtemplate","suggestioncardtemplateid","name");
			Add("ko_invoicestatus","ko_invoicestatusid","ko_name");
			Add("solutioncomponentdefinition","solutioncomponentdefinitionid","name");
			Add("msdyn_postalbum","msdyn_postalbumid","msdyn_name");
			Add("provisionlanguageforuser","provisionlanguageforuserid","name");
			Add("msdyn_aibdatasetrecord","msdyn_aibdatasetrecordid","msdyn_name");
			Add("stagesolutionupload","stagesolutionuploadid","name");
			Add("bookableresourcecategory","bookableresourcecategoryid","name");
			Add("callbackregistration","callbackregistrationid","name");
			Add("accountleads","accountleadid","name");
			Add("kbarticletemplate","kbarticletemplateid","title");
			Add("dynamicpropertyinstance","dynamicpropertyinstanceid","name");
			Add("actioncard","actioncardid","title");
			Add("msdynce_botcontent","msdynce_botcontentid","msdynce_autonumber");
			Add("sdkmessageprocessingstepimage","sdkmessageprocessingstepimageid","name");
			Add("msdyn_federatedarticle","msdyn_federatedarticleid","msdyn_title");
			Add("advancedsimilarityrule","advancedsimilarityruleid","name");
			Add("site","siteid","name");
			Add("bookableresourcecategoryassn","bookableresourcecategoryassnid","name");
			Add("canvasappextendedmetadata","canvasappextendedmetadataid","name");
			Add("businessunit","businessunitid","name");
			Add("managedproperty","managedpropertyid","logicalname");
			Add("newprocess","businessprocessflowinstanceid","name");
			Add("syncerror","syncerrorid","name");
			Add("competitorproduct","competitorproductid","name");
			Add("msdyn_richtextfile","msdyn_richtextfileid","msdyn_name");
			Add("solutioncomponentattributeconfiguration","solutioncomponentattributeconfigurationid","name");
			Add("email","activityid","subject");
			Add("internalcatalogassignment","internalcatalogassignmentid","name");
			Add("recurringappointmentmaster","activityid","subject");
			Add("msdyn_sikeyvalueconfig","msdyn_sikeyvalueconfigid","msdyn_configkey");
			Add("userqueryvisualization","userqueryvisualizationid","name");
			Add("transformationparametermapping","transformationparametermappingid","data");
			Add("msdyn_helppage","msdyn_helppageid","msdyn_displayname");
			Add("orderclose","activityid","subject");
			Add("partnerapplication","partnerapplicationid","name");
			Add("msdyn_upgraderun","msdyn_upgraderunid","msdyn_summary");
			Add("entitlement","entitlementid","name");
			Add("importmap","importmapid","name");
			Add("incident","incidentid","title");
			Add("msdyn_teamscollaboration","msdyn_teamscollaborationid","msdyn_teamname");
			Add("customcontrol","customcontrolid","name");
			Add("dynamicproperty","dynamicpropertyid","name");
			Add("officegraphdocument","officegraphdocumentid","title");
			Add("officedocument","officedocumentid","name");
			Add("sla","slaid","name");
			Add("emailserverprofile","emailserverprofileid","name");
			Add("goalrollupquery","goalrollupqueryid","name");
			Add("calendarrule","calendarruleid","name");
			Add("convertruleitem","convertruleitemid","name");
			Add("salesliteratureitem","salesliteratureitemid","title");
			Add("settingdefinition","settingdefinitionid","displayname");
			Add("bookingstatus","bookingstatusid","name");
			Add("msdyn_entityrankingrule","msdyn_entityrankingruleid","msdyn_name");
			Add("postfollow","postfollowid","regardingobjectidname");
			Add("dynamicpropertyassociation","dynamicpropertyassociationid","name");
			Add("similarityrule","similarityruleid","name");
			Add("competitoraddress","competitoraddressid","name");
			Add("azureserviceconnection","azureserviceconnectionid","name");
			Add("transactioncurrency","transactioncurrencyid","currencyname");
			Add("campaignactivityitem","campaignactivityitemid","name");
			Add("knowledgearticleincident","knowledgearticleincidentid","knowledgearticleidname");
			Add("campaignitem","campaignitemid","name");
			Add("topic","topicid","name");
			Add("listoperation","listoperationid","listoperationprimaryname");
			Add("solution","solutionid","friendlyname");
			Add("exportsolutionupload","exportsolutionuploadid","name");
			Add("competitorsalesliterature","competitorsalesliteratureid","name");
			Add("postcomment","postcommentid","text");
			Add("msdyn_suggestedcontactsdatasource","msdyn_suggestedcontactsdatasourceid","msdyn_name");
			Add("report","reportid","name");
			Add("msdyn_callablecontext","msdyn_callablecontextid","msdyn_EntityLogicalName");
			Add("customeraddress","customeraddressid","name");
			Add("msdyn_odatav4ds","msdyn_odatav4dsid","msdyn_name");
			Add("customeropportunityrole","customeropportunityroleid","opportunityroleidname");
			Add("resource","resourceid","name");
			Add("pdfsetting","pdfsettingid","entityname");
			Add("leadproduct","leadproductid","name");
			Add("contractdetail","contractdetailid","title");
			Add("msdyn_tour","msdyn_tourid","msdyn_displayname");
			Add("list","listid","listname");
			Add("msdyn_wallsavedqueryusersettings","msdyn_wallsavedqueryusersettingsid","msdyn_entityname");
			Add("environmentvariablevalue","environmentvariablevalueid","schemaname");
			Add("productassociation","productassociationid","productidname");
			Add("savedquery","savedqueryid","name");
			Add("uom","uomid","name");
			Add("msdyn_suggestedactivitydatasource","msdyn_suggestedactivitydatasourceid","msdyn_name");
			Add("conversationtranscript","conversationtranscriptid","name");
			Add("channelaccessprofilerule","channelaccessprofileruleid","name");
			Add("untrackedemail","activityid","subject");
			Add("processsession","processsessionid","name");
			Add("msdyn_notesanalysisconfig","msdyn_notesanalysisconfigid","msdyn_name");
			Add("goal","goalid","title");
			Add("constraintbasedgroup","constraintbasedgroupid","name");
			Add("incidentresolution","activityid","subject");
			Add("ratingmodel","ratingmodelid","name");
			Add("connector","connectorid","name");
			Add("asyncoperation","asyncoperationid","name");
			Add("knowledgesearchmodel","knowledgesearchmodelid","name");
			Add("equipment","equipmentid","name");
			Add("webresource","webresourceid","name");
			Add("msdyn_aiodtrainingboundingbox","msdyn_aiodtrainingboundingboxid","msdyn_name");
			Add("activityparty","activitypartyid","partyidname");
			Add("wizardaccessprivilege","wizardaccessprivilegeid","entityname");
			Add("msdyn_aiodlabel","msdyn_aiodlabelid","msdyn_name");
			Add("sharepointdocument","sharepointdocumentid","fullname");
			Add("msdyn_kmfederatedsearchconfig","msdyn_kmfederatedsearchconfigid","msdyn_name");
			Add("msdyn_aimodel","msdyn_aimodelid","msdyn_name");
			Add("metric","metricid","name");
			Add("customcontrolresource","customcontrolresourceid","name");
			Add("fax","activityid","subject");
			Add("kipon_vetest","kipon_vetestid","kipon_name");
			Add("msdyn_msteamssetting","msdyn_msteamssettingid","msdyn_msteamssettingsname");
			Add("optionset","optionsetid","name");
			Add("bot","botid","name");
			Add("serviceendpoint","serviceendpointid","name");
			Add("position","positionid","name");
			Add("channelaccessprofile","channelaccessprofileid","name");
			Add("knowledgearticleviews","knowledgearticleviewsid","knowledgearticleidname");
			Add("opportunityclose","activityid","subject");
			Add("msdyn_actioncardrolesetting","msdyn_actioncardrolesettingid","msdyn_name");
			Add("msdyn_aiodimage","msdyn_aiodimageid","msdyn_name");
			Add("msdyn_federatedarticleincident","msdyn_federatedarticleincidentid","msdyn_name");
			Add("systemform","formid","name");
			Add("msdyn_aiconfiguration","msdyn_aiconfigurationid","msdyn_name");
			Add("msdyn_aibdatasetscontainer","msdyn_aibdatasetscontainerid","msdyn_name");
			Add("attachment","attachmentid","filename");
			Add("bookableresourcegroup","bookableresourcegroupid","name");
			Add("template","templateid","title");
			Add("serviceappointment","activityid","subject");
			Add("salesprocessinstance","salesprocessinstanceid","name");
			Add("theme","themeid","name");
			Add("organization","organizationid","name");
			Add("bookableresource","bookableresourceid","name");
			Add("solutioncomponentconfiguration","solutioncomponentconfigurationid","name");
			Add("msdyn_playbookinstance","msdyn_playbookinstanceid","msdyn_name");
			Add("msdyn_solutionhistory","msdyn_solutionhistoryid","msdyn_name");
			Add("letter","activityid","subject");
			Add("pluginassembly","pluginassemblyid","name");
			Add("businessunitnewsarticle","businessunitnewsarticleid","articletitle");
			Add("knowledgearticle","knowledgearticleid","title");
			Add("appmodule","appmoduleid","name");
			Add("resourcegroupdatasource","resourcegroupdatasourceid","name");
			Add("contactinvoices","contactinvoiceid","name");
			Add("leadtoopportunitysalesprocess","businessprocessflowinstanceid","name");
			Add("characteristic","characteristicid","name");
			Add("calendar","calendarid","name");
			Add("msdyn_untrackedappointment","msdyn_untrackedappointmentid","msdyn_name");
			Add("sdkmessage","sdkmessageid","name");
			Add("bulkoperationlog","bulkoperationlogid","name");
			Add("lead","leadid","fullname");
			Add("connectionreference","connectionreferenceid","connectionreferencedisplayname");
			Add("contact","contactid","fullname");
			Add("msdyn_suggestedactivity","msdyn_suggestedactivityid","msdyn_subject");
			Add("campaign","campaignid","name");
			Add("queue","queueid","name");
			Add("expiredprocess","businessprocessflowinstanceid","name");
			Add("teamtemplate","teamtemplateid","teamtemplatename");
			Add("entitlemententityallocationtypemapping","entitlemententityallocationtypemappingid","name");
			Add("contactleads","contactleadid","name");
			Add("appmodulecomponentedge","appmodulecomponentedgeid","name");
			Add("appmodulecomponentnode","appmodulecomponentnodeid","name");
			Add("sdkmessagefilter","sdkmessagefilterid","name");
			Add("userform","userformid","name");
			Add("msdyn_knowledgearticletemplate","msdyn_knowledgearticletemplateid","msdyn_name");
			Add("interactionforemail","interactionforemailid","name");
			Add("product","productid","name");
			Add("resourcegroup","resourcegroupid","name");
			Add("attributeimageconfig","attributeimageconfigid","attributelogicalname");
			Add("solutioncomponentrelationshipconfiguration","solutioncomponentrelationshipconfigurationid","name");
			Add("translationprocess","businessprocessflowinstanceid","name");
			Add("adminsettingsentity","adminsettingsentityid","new_name");
			Add("datalakeworkspacepermission","datalakeworkspacepermissionid","name");
			Add("dynamicpropertyoptionsetitem","dynamicpropertyoptionsetvalueid","dynamicpropertyoptionname");
			Add("msdyn_icebreakersconfig","msdyn_icebreakersconfigid","msdyn_name");
			Add("cardtype","cardtypeid","cardname");
			Add("botcomponent","botcomponentid","name");
			Add("task","activityid","subject");
			Add("msdyn_playbooktemplate","msdyn_playbooktemplateid","msdyn_name");
			Add("importfile","importfileid","name");
			Add("workflow","workflowid","name");
			Add("kipon_vtprovider","kipon_vtproviderid","kipon_name");
			Add("workflowbinary","workflowbinaryid","name");
			Add("appconfigmaster","appconfigmasterid","name");
			Add("msdyn_autocapturerule","msdyn_autocaptureruleid","msdyn_name");
			Add("msdyn_solutionhistorydatasource","msdyn_solutionhistorydatasourceid","msdyn_name");
			Add("topicmodelexecutionhistory","topicmodelexecutionhistoryid","name");
			Add("entitydatasource","entitydatasourceid","name");
			Add("catalogassignment","catalogassignmentid","name");
			Add("msdyn_playbookactivityattribute","msdyn_playbookactivityattributeid","msdyn_attributeLogicalName");
			Add("owner","ownerid","name");
			Add("kbarticlecomment","kbarticlecommentid","title");
			Add("canvasapp","canvasappid","name");
			Add("resourcegroupexpansion","resourcegroupexpansionid","name");
			Add("datalakefolderpermission","datalakefolderpermissionid","name");
			Add("channelaccessprofileruleitem","channelaccessprofileruleitemid","name");
			Add("columnmapping","columnmappingid","sourceattributename");
			Add("incidentknowledgebaserecord","incidentknowledgebaserecordid","name");
			Add("navigationsetting","navigationsettingid","name");
			Add("entitlementproducts","entitlementproductid","name");
			Add("userquery","userqueryid","name");
			Add("pricelevel","pricelevelid","name");
			Add("package","packageid","packageuniquename");
			Add("msdyn_componentlayerdatasource","msdyn_componentlayerdatasourceid","msdyn_name");
			Add("customapirequestparameter","customapirequestparameterid","name");
			Add("routingrule","routingruleid","name");
			Add("import","importid","name");
			Add("kipon_datepoc","kipon_datepocid","kipon_name");
			Add("externalpartyitem","externalpartyitemid","name");
			Add("environmentvariabledefinition","environmentvariabledefinitionid","schemaname");
			Add("uomschedule","uomscheduleid","name");
			Add("hierarchyrule","hierarchyruleid","name");
			Add("slakpiinstance","slakpiinstanceid","name");
			Add("category","categoryid","title");
			Add("appointment","activityid","subject");
			Add("msdyn_aibdatasetfile","msdyn_aibdatasetfileid","msdyn_name");
			Add("multientitysearch","multientitysearchid","name");
			Add("holidaywrapper","holidaywrapperid","name");
			Add("emailsignature","emailsignatureid","title");
			Add("connectionrole","connectionroleid","name");
			Add("quote","quoteid","name");
			Add("msdyn_collabgraphresource","msdyn_collabgraphresourceid","msdyn_graphresourcename");
			Add("annotation","annotationid","subject");
			Add("externalparty","externalpartyid","fullname");
			Add("channelproperty","channelpropertyid","name");
			Add("entitlementchannel","entitlementchannelid","name");
			Add("delveactionhub","delveactionhubid","subject");
			Add("post","postid","text");
			Add("queueitem","queueitemid","title");
			Add("systemuser","systemuserid","fullname");
			Add("competitor","competitorid","name");
			Add("bookableresourcebookingheader","bookableresourcebookingheaderid","name");
			Add("opportunity","opportunityid","name");
			Add("socialactivity","activityid","subject");
			Add("entitykey","entitykeyid","logicalname");
			Add("msdyn_wallsavedquery","msdyn_wallsavedqueryid","msdyn_entityname");
			Add("relationshipattribute","relationshipattributeid","name");
			Add("syncattributemappingprofile","syncattributemappingprofileid","name");
			Add("knowledgebaserecord","knowledgebaserecordid","title");
			Add("msdyn_actioncardregarding","msdyn_actioncardregardingid","msdyn_name");
			Add("timezonelocalizedname","timezonelocalizednameid","userinterfacename");
			Add("processstageparameter","processstageparameterid","name");
			Add("entitlementtemplatechannel","entitlementtemplatechannelid","name");
			Add("sharepointdocumentlocation","sharepointdocumentlocationid","name");
			Add("timezonerule","timezoneruleid","timezoneruleversionnumber");
			Add("productsubstitute","productsubstituteid","name");
			Add("msdyn_playbookcategory","msdyn_playbookcategoryid","msdyn_name");
			Add("bookableresourcebooking","bookableresourcebookingid","name");
			Add("contracttemplate","contracttemplateid","name");
			Add("cascadegrantrevokeaccessrecordstracker","cascadegrantrevokeaccessrecordstrackerid","name");
			Add("relationship","relationshipid","name");
			Add("plugintracelog","plugintracelogid","typename");
			Add("marketingformdisplayattributes","marketingformdisplayattributesid","name");
			Add("msdyn_componentlayer","msdyn_componentlayerid","msdyn_name");
			Add("personaldocumenttemplate","personaldocumenttemplateid","name");
			Add("sharepointsite","sharepointsiteid","name");
			Add("slaitem","slaitemid","name");
			Add("relationshiprole","relationshiproleid","name");
			Add("msdyn_upgradeversion","msdyn_upgradeversionid","msdyn_summary");
			Add("sdkmessageprocessingstep","sdkmessageprocessingstepid","name");
			Add("salesorder","salesorderid","name");
			Add("bulkdeleteoperation","bulkdeleteoperationid","name");
			Add("publisher","publisherid","friendlyname");
			Add("customapiresponseproperty","customapiresponsepropertyid","name");
			Add("discounttype","discounttypeid","name");
			Add("opportunityproduct","opportunityproductid","opportunityproductname");
			Add("kipon_multitest","kipon_multitestid","kipon_name");
			Add("commitment","commitmentid","name");
			Add("contactquotes","contactquoteid","name");
			Add("productpricelevel","productpricelevelid","productidname");
			Add("msdyn_msteamssettingsv2","msdyn_msteamssettingsv2id","msdyn_msteamssettingsname");
			Add("discount","discountid","name");
			Add("entitlementtemplateproducts","entitlementtemplateproductid","name");
			Add("documentindex","documentindexid","title");
			Add("webwizard","webwizardid","name");
			Add("msdyn_playbookactivity","msdyn_playbookactivityid","msdyn_subject");
			Add("mailmergetemplate","mailmergetemplateid","name");
			Add("mobileofflineprofile","mobileofflineprofileid","name");
			Add("msdyn_salesinsightssettings","msdyn_salesinsightssettingsid","msdyn_name");
			Add("feedback","feedbackid","title");
			Add("msdyn_solutioncomponentsummary","msdyn_solutioncomponentsummaryid","msdyn_name");
			Add("msdyn_relationshipinsightsunifiedconfig","msdyn_relationshipinsightsunifiedconfigid","new_name");
			Add("datalakefolder","datalakefolderid","name");
			Add("socialprofile","socialprofileid","profilename");
			Add("resourcespec","resourcespecid","name");
			Add("appsetting","appsettingid","displayname");
			Add("tracelog","tracelogid","text");
			Add("roletemplate","roletemplateid","name");
			Add("msdyn_suggestedcontact","msdyn_suggestedcontactid","msdyn_fullname");
			Add("timezonedefinition","timezonedefinitionid","userinterfacename");
			Add("invoicedetail","invoicedetailid","invoicedetailname");
			Add("subject","subjectid","title");
			Add("authorizationserver","authorizationserverid","name");
			Add("duplicaterule","duplicateruleid","name");
			Add("bookableresourcebookingexchangesyncidmapping","bookableresourcebookingexchangesyncidmappingid","name");
			Add("privilege","privilegeid","name");
			Add("complexcontrol","complexcontrolid","name");
			Add("processstage","processstageid","stagename");
			Add("serviceplan","serviceplanid","name");
			Add("contactorders","contactorderid","name");
			Add("msdyn_autocapturesettings","msdyn_autocapturesettingsid","msdyn_name");
			Add("entityimageconfig","entityimageconfigid","parententitylogicalname");
			Add("appelement","appelementid","name");
			Add("quoteclose","activityid","subject");
			Add("leadcompetitors","leadcompetitorid","name");
			Add("recommendeddocument","recommendeddocumentid","title");
			Add("msdyn_solutioncomponentdatasource","msdyn_solutioncomponentdatasourceid","msdyn_name");
			Add("msdyn_aifptrainingdocument","msdyn_aifptrainingdocumentid","msdyn_name");
			Add("phonetocaseprocess","businessprocessflowinstanceid","name");
			Add("phonecall","activityid","subject");
			Add("contract","contractid","title");
			Add("channelpropertygroup","channelpropertygroupid","name");
			Add("productsalesliterature","productsalesliteratureid","name");
			Add("servicecontractcontacts","servicecontractcontactid","name");
			Add("languagelocale","languagelocaleid","name");
		}
	}
}
namespace Kipon.Solid.Plugin.Actions
{
	[Kipon.Xrm.Attributes.LogicalName("account")]
	public partial interface IAccountCountContactsRequest: Kipon.Xrm.ActionTarget<Kipon.Solid.Plugin.Entities.Account>
	{
		string Name { get; }
	}
	public partial class AccountCountContactsResponse
	{
		[Kipon.Xrm.Attributes.Output("AMoney", true)]
		 public Microsoft.Xrm.Sdk.Money AMoney { get; set; }
		[Kipon.Xrm.Attributes.Output("Count", true)]
		 public int Count { get; set; }
		[Kipon.Xrm.Attributes.Output("FirstVeName", true)]
		 public string FirstVeName { get; set; }
	}
	public partial interface IAnunboundedactionRequest
	{
		string Name { get; }
		string Document { get; }
		Microsoft.Xrm.Sdk.OptionSetValue Picklist { get; }
	}
	public partial class AnunboundedactionResponse
	{
		[Kipon.Xrm.Attributes.Output("Id", true)]
		 public string Id { get; set; }
	}
	[Kipon.Xrm.Attributes.LogicalName("lead")]
	public partial interface IQualifyLeadRequest: Kipon.Xrm.ActionTarget<Kipon.Solid.Plugin.Entities.Lead>
	{
		bool? CreateAccount { get; }
		bool? CreateContact { get; }
		bool? CreateOpportunity { get; }
		Microsoft.Xrm.Sdk.EntityReference OpportunityCurrencyId { get; }
		Microsoft.Xrm.Sdk.EntityReference OpportunityCustomerId { get; }
		Microsoft.Xrm.Sdk.EntityReference SourceCampaignId { get; }
		int Status { get; }
	}
	public partial interface IGenerateQuoteFromOpportunityRequest
	{
		Guid OpportunityId { get; }
		Microsoft.Xrm.Sdk.Query.ColumnSet ColumnSet { get; }
		Microsoft.Xrm.Sdk.EntityReference ProcessInstanceId { get; }
	}
	public partial class GenerateQuoteFromOpportunityResponse
	{
		[Kipon.Xrm.Attributes.Output("Entity", false)]
		 public Microsoft.Xrm.Sdk.Entity Entity { get; set; }
	}
}
namespace Kipon.Solid.Plugin.Actions.Implement
{
	using Kipon.Solid.Plugin.Actions;
	using Kipon.Xrm.Actions;
	public partial class AccountCountContactsRequest : AbstractActionRequest, IAccountCountContactsRequest
	{
		public AccountCountContactsRequest(Microsoft.Xrm.Sdk.IPluginExecutionContext ctx): base(ctx){ }
		public string Name {get => this.ValueOf<string>("Name");}
		public Microsoft.Xrm.Sdk.EntityReference Target {get => this.ValueOf<Microsoft.Xrm.Sdk.EntityReference>("Target");}
	}
	public partial class AnunboundedactionRequest : AbstractActionRequest, IAnunboundedactionRequest
	{
		public AnunboundedactionRequest(Microsoft.Xrm.Sdk.IPluginExecutionContext ctx): base(ctx){ }
		public string Name {get => this.ValueOf<string>("Name");}
		public string Document {get => this.ValueOf<string>("Document");}
		public Microsoft.Xrm.Sdk.OptionSetValue Picklist {get => this.ValueOf<Microsoft.Xrm.Sdk.OptionSetValue>("Picklist");}
	}
	public partial class QualifyLeadRequest : AbstractActionRequest, IQualifyLeadRequest
	{
		public QualifyLeadRequest(Microsoft.Xrm.Sdk.IPluginExecutionContext ctx): base(ctx){ }
		public bool? CreateAccount {get => this.ValueOf<bool?>("CreateAccount");}
		public bool? CreateContact {get => this.ValueOf<bool?>("CreateContact");}
		public bool? CreateOpportunity {get => this.ValueOf<bool?>("CreateOpportunity");}
		public Microsoft.Xrm.Sdk.EntityReference OpportunityCurrencyId {get => this.ValueOf<Microsoft.Xrm.Sdk.EntityReference>("OpportunityCurrencyId");}
		public Microsoft.Xrm.Sdk.EntityReference OpportunityCustomerId {get => this.ValueOf<Microsoft.Xrm.Sdk.EntityReference>("OpportunityCustomerId");}
		public Microsoft.Xrm.Sdk.EntityReference SourceCampaignId {get => this.ValueOf<Microsoft.Xrm.Sdk.EntityReference>("SourceCampaignId");}
		public int Status {get => this.ValueOf<int>("Status");}
		public Microsoft.Xrm.Sdk.EntityReference Target {get => this.ValueOf<Microsoft.Xrm.Sdk.EntityReference>("Target");}
	}
	public partial class GenerateQuoteFromOpportunityRequest : AbstractActionRequest, IGenerateQuoteFromOpportunityRequest
	{
		public GenerateQuoteFromOpportunityRequest(Microsoft.Xrm.Sdk.IPluginExecutionContext ctx): base(ctx){ }
		public Guid OpportunityId {get => this.ValueOf<Guid>("OpportunityId");}
		public Microsoft.Xrm.Sdk.Query.ColumnSet ColumnSet {get => this.ValueOf<Microsoft.Xrm.Sdk.Query.ColumnSet>("ColumnSet");}
		public Microsoft.Xrm.Sdk.EntityReference ProcessInstanceId {get => this.ValueOf<Microsoft.Xrm.Sdk.EntityReference>("ProcessInstanceId");}
	}
}
